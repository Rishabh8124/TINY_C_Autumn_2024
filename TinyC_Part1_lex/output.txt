<MULTI_LINE_COMMENT>
<PUNCTUATOR, #>
<IDENTIFIER, define>
<IDENTIFIER, HELLO>
<INTEGER_CONSTANT, 1234>
<KEYWORD, inline>
<KEYWORD, int>
<IDENTIFIER, foo>
<PUNCTUATOR, (>
<KEYWORD, int>
<PUNCTUATOR, *>
<KEYWORD, restrict>
<IDENTIFIER, p>
<PUNCTUATOR, ,>
<PUNCTUATOR, ...>
<PUNCTUATOR, )>
<PUNCTUATOR, {>
<KEYWORD, auto>
<KEYWORD, int>
<IDENTIFIER, a>
<PUNCTUATOR, =>
<INTEGER_CONSTANT, 1>
<PUNCTUATOR, ;>
<KEYWORD, register>
<KEYWORD, int>
<IDENTIFIER, b>
<PUNCTUATOR, ;>
<KEYWORD, extern>
<KEYWORD, int>
<IDENTIFIER, c>
<PUNCTUATOR, ;>
<KEYWORD, volatile>
<KEYWORD, int>
<IDENTIFIER, d>
<PUNCTUATOR, ;>
<KEYWORD, return>
<IDENTIFIER, a>
<PUNCTUATOR, ;>
<PUNCTUATOR, }>
<KEYWORD, struct>
<IDENTIFIER, mystruct_>
<PUNCTUATOR, {>
<KEYWORD, _Bool>
<IDENTIFIER, b>
<PUNCTUATOR, ;>
<KEYWORD, _Complex>
<IDENTIFIER, c>
<PUNCTUATOR, ;>
<KEYWORD, _Imaginary>
<IDENTIFIER, i>
<PUNCTUATOR, ;>
<KEYWORD, int>
<IDENTIFIER, n>
<PUNCTUATOR, ;>
<PUNCTUATOR, }>
<PUNCTUATOR, ;>
<KEYWORD, union>
<IDENTIFIER, myunion>
<PUNCTUATOR, {>
<KEYWORD, int>
<IDENTIFIER, x>
<PUNCTUATOR, ,>
<IDENTIFIER, y>
<PUNCTUATOR, ;>
<PUNCTUATOR, }>
<PUNCTUATOR, ;>
<KEYWORD, enum>
<IDENTIFIER, myenum>
<PUNCTUATOR, {>
<IDENTIFIER, TAG1>
<PUNCTUATOR, ,>
<IDENTIFIER, TAG2>
<PUNCTUATOR, }>
<PUNCTUATOR, ;>
<KEYWORD, typedef>
<KEYWORD, struct>
<IDENTIFIER, mystruct_>
<IDENTIFIER, mystruct>
<PUNCTUATOR, ;>
<KEYWORD, static>
<IDENTIFIER, mystruct>
<IDENTIFIER, ms2>
<PUNCTUATOR, ;>
<KEYWORD, void>
<IDENTIFIER, main>
<PUNCTUATOR, (>
<PUNCTUATOR, )>
<PUNCTUATOR, {>
<KEYWORD, int>
<IDENTIFIER, n1>
<PUNCTUATOR, =>
<INTEGER_CONSTANT, 4>
<PUNCTUATOR, *>
<KEYWORD, sizeof>
<PUNCTUATOR, (>
<KEYWORD, int>
<PUNCTUATOR, )>
<PUNCTUATOR, ;>
<KEYWORD, for>
<PUNCTUATOR, (>
<KEYWORD, int>
<IDENTIFIER, i>
<PUNCTUATOR, =>
<IDENTIFIER, n1>
<PUNCTUATOR, ;>
<IDENTIFIER, i>
<PUNCTUATOR, <=>
<IDENTIFIER, n1>
<PUNCTUATOR, &&>
<IDENTIFIER, i>
<PUNCTUATOR, >=>
<INTEGER_CONSTANT, 0>
<PUNCTUATOR, ;>
<IDENTIFIER, i>
<PUNCTUATOR, ++>
<PUNCTUATOR, )>
<PUNCTUATOR, {>
<IDENTIFIER, n1>
<PUNCTUATOR, /=>
<INTEGER_CONSTANT, 2>
<PUNCTUATOR, ;>
<IDENTIFIER, n1>
<PUNCTUATOR, *=>
<INTEGER_CONSTANT, 2>
<PUNCTUATOR, ;>
<IDENTIFIER, n1>
<PUNCTUATOR, +=>
<INTEGER_CONSTANT, 1>
<PUNCTUATOR, ,>
<IDENTIFIER, n1>
<PUNCTUATOR, -=>
<INTEGER_CONSTANT, 1>
<PUNCTUATOR, ;>
<IDENTIFIER, n1>
<PUNCTUATOR, =>
<IDENTIFIER, n1>
<PUNCTUATOR, ^>
<IDENTIFIER, n1>
<PUNCTUATOR, ^>
<IDENTIFIER, n1>
<PUNCTUATOR, ;>
<IDENTIFIER, n1>
<PUNCTUATOR, |>
<PUNCTUATOR, =>
<IDENTIFIER, n1>
<PUNCTUATOR, ;>
<IDENTIFIER, n1>
<PUNCTUATOR, &=>
<IDENTIFIER, n1>
<PUNCTUATOR, ;>
<KEYWORD, if>
<PUNCTUATOR, (>
<IDENTIFIER, n1>
<PUNCTUATOR, %>
<INTEGER_CONSTANT, 2>
<PUNCTUATOR, ==>
<INTEGER_CONSTANT, 0>
<PUNCTUATOR, )>
<IDENTIFIER, printf>
<PUNCTUATOR, (>
<STRING, "n = %d\n">
<PUNCTUATOR, ,>
<IDENTIFIER, n1>
<PUNCTUATOR, )>
<PUNCTUATOR, ;>
<KEYWORD, else>
<PUNCTUATOR, {>
<IDENTIFIER, n1>
<PUNCTUATOR, =>
<IDENTIFIER, n1>
<PUNCTUATOR, +>
<IDENTIFIER, n1>
<PUNCTUATOR, +>
<PUNCTUATOR, (>
<PUNCTUATOR, ->
<IDENTIFIER, n1>
<PUNCTUATOR, )>
<PUNCTUATOR, />
<INTEGER_CONSTANT, 1>
<PUNCTUATOR, ;>
<IDENTIFIER, n1>
<PUNCTUATOR, <<=>
<INTEGER_CONSTANT, 2>
<PUNCTUATOR, ;>
<IDENTIFIER, n1>
<PUNCTUATOR, >>=>
<INTEGER_CONSTANT, 2>
<PUNCTUATOR, ;>
<PUNCTUATOR, }>
<PUNCTUATOR, }>
<KEYWORD, double>
<IDENTIFIER, d1>
<PUNCTUATOR, =>
<FLOATING_CONSTANT, 234.>
<PUNCTUATOR, ;>
<KEYWORD, double>
<IDENTIFIER, d2>
<PUNCTUATOR, =>
<FLOATING_CONSTANT, 234.e2>
<PUNCTUATOR, ;>
<KEYWORD, double>
<IDENTIFIER, d3>
<PUNCTUATOR, =>
<FLOATING_CONSTANT, .00>
<PUNCTUATOR, ;>
<KEYWORD, const>
<KEYWORD, float>
<IDENTIFIER, f1>
<PUNCTUATOR, =>
<FLOATING_CONSTANT, .234>
<PUNCTUATOR, ;>
<KEYWORD, float>
<IDENTIFIER, f2>
<PUNCTUATOR, =>
<FLOATING_CONSTANT, .234E-2>
<PUNCTUATOR, ;>
<KEYWORD, float>
<IDENTIFIER, f3>
<PUNCTUATOR, =>
<FLOATING_CONSTANT, 0.234e+2>
<PUNCTUATOR, ;>
<KEYWORD, float>
<IDENTIFIER, f4>
<PUNCTUATOR, =>
<FLOATING_CONSTANT, 12.234e01>
<PUNCTUATOR, ;>
<KEYWORD, unsigned>
<KEYWORD, long>
<IDENTIFIER, l>
<PUNCTUATOR, =>
<INTEGER_CONSTANT, 12902311123>
<PUNCTUATOR, ;>
<KEYWORD, signed>
<KEYWORD, short>
<IDENTIFIER, s>
<PUNCTUATOR, =>
<PUNCTUATOR, ->
<INTEGER_CONSTANT, 12>
<PUNCTUATOR, ;>
<KEYWORD, char>
<IDENTIFIER, c>
<PUNCTUATOR, =>
<CHARACTER_CONSTANT, '\?'>
<PUNCTUATOR, ;>
<KEYWORD, char>
<IDENTIFIER, s1>
<PUNCTUATOR, [>
<PUNCTUATOR, ]>
<PUNCTUATOR, =>
<STRING, "A string // comments dont work here :P /* not even multiline ones */">
<PUNCTUATOR, ;>
<KEYWORD, char>
<IDENTIFIER, s2>
<PUNCTUATOR, [>
<PUNCTUATOR, ]>
<PUNCTUATOR, =>
<STRING, "">
<MULTI_LINE_COMMENT>
<PUNCTUATOR, ;>
<KEYWORD, int>
<IDENTIFIER, n2>
<PUNCTUATOR, =>
<IDENTIFIER, n1>
<PUNCTUATOR, &>
<IDENTIFIER, s>
<PUNCTUATOR, ?>
<INTEGER_CONSTANT, 1>
<PUNCTUATOR, :>
<INTEGER_CONSTANT, 2>
<PUNCTUATOR, ;>
<IDENTIFIER, n2>
<PUNCTUATOR, -->
<PUNCTUATOR, ;>
<IDENTIFIER, mystruct>
<PUNCTUATOR, *>
<IDENTIFIER, ms1>
<PUNCTUATOR, ;>
Invalid Token!
