Terminals unused in grammar

    ENUM
    STRUCT
    TYPEDEF
    UNION
    ESCAPE_OPERATOR
    MACRO_OPERATOR


Grammar

    0 $accept: TRANSLATIONAL_UNIT $end

    1 PRIMARY_EXPRESSION: IDENTIFIER
    2                   | CONSTANT
    3                   | STRING_LITERAL
    4                   | LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS

    5 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION
    6                   | POSTFIX_EXPRESSION LEFT_SQUARE_BRACKET EXPRESSION RIGHT_SQUARE_BRACKET
    7                   | POSTFIX_EXPRESSION LEFT_PARANTHESIS ARGUMENT_EXPRESSION_LIST_OPT RIGHT_PARANTHESIS
    8                   | POSTFIX_EXPRESSION DOT IDENTIFIER
    9                   | POSTFIX_EXPRESSION POINTER_ACCESS IDENTIFIER
   10                   | POSTFIX_EXPRESSION INCREMENT_OPERATOR
   11                   | POSTFIX_EXPRESSION DECREMENT_OPERATOR
   12                   | LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET
   13                   | LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET

   14 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION
   15                         | ARGUMENT_EXPRESSION_LIST COMMA ASSIGNMENT_EXPRESSION

   16 ARGUMENT_EXPRESSION_LIST_OPT: ARGUMENT_EXPRESSION_LIST
   17                             | ε

   18 UNARY_EXPRESSION: POSTFIX_EXPRESSION
   19                 | INCREMENT_OPERATOR UNARY_EXPRESSION
   20                 | DECREMENT_OPERATOR UNARY_EXPRESSION
   21                 | UNARY_OPEARATOR CAST_EXPRESSION
   22                 | SIZEOF UNARY_EXPRESSION
   23                 | SIZEOF LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS

   24 UNARY_OPEARATOR: ADDITION_OPERATOR
   25                | SUBTRACTION_OPERATOR
   26                | MULTIPLICATION_OPERATOR
   27                | BITWISE_AND_OPERATOR
   28                | NEGATION_OPERATOR
   29                | NOT_OPERATOR

   30 CAST_EXPRESSION: UNARY_EXPRESSION
   31                | LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS CAST_EXPRESSION

   32 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION
   33                          | MULTIPLICATIVE_EXPRESSION MULTIPLICATION_OPERATOR CAST_EXPRESSION
   34                          | MULTIPLICATIVE_EXPRESSION DIVIDE_OPERATOR CAST_EXPRESSION
   35                          | MULTIPLICATIVE_EXPRESSION REMAINDER_OPERATOR CAST_EXPRESSION

   36 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION
   37                    | ADDITIVE_EXPRESSION ADDITION_OPERATOR MULTIPLICATIVE_EXPRESSION
   38                    | ADDITIVE_EXPRESSION SUBTRACTION_OPERATOR MULTIPLICATIVE_EXPRESSION

   39 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION
   40                 | SHIFT_EXPRESSION SHIFT_LEFT_OPERATOR ADDITIVE_EXPRESSION
   41                 | SHIFT_EXPRESSION SHIFT_RIGHT_OPERATOR ADDITIVE_EXPRESSION

   42 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION
   43                      | RELATIONAL_EXPRESSION LESS_THAN SHIFT_EXPRESSION
   44                      | RELATIONAL_EXPRESSION GREATER_THAN SHIFT_EXPRESSION
   45                      | RELATIONAL_EXPRESSION LESS_THAN_EQUAL_TO SHIFT_EXPRESSION
   46                      | RELATIONAL_EXPRESSION GREATER_THAN_EQUAL_TO SHIFT_EXPRESSION

   47 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION
   48                    | EQUALITY_EXPRESSION EQUALITY_OPERATOR RELATIONAL_EXPRESSION
   49                    | EQUALITY_EXPRESSION NON_EQUALITY_OPERATOR RELATIONAL_EXPRESSION

   50 AND_EXPRESSION: EQUALITY_EXPRESSION
   51               | AND_EXPRESSION BITWISE_AND_OPERATOR EQUALITY_EXPRESSION

   52 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION
   53                        | EXCLUSIVE_OR_EXPRESSION XOR_OPERATOR AND_EXPRESSION

   54 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION
   55                        | INCLUSIVE_OR_EXPRESSION BITWISE_OR_OPERATOR EXCLUSIVE_OR_EXPRESSION

   56 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION
   57                       | LOGICAL_AND_EXPRESSION LOGICAL_AND_OPERATOR INCLUSIVE_OR_EXPRESSION

   58 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION
   59                      | LOGICAL_OR_EXPRESSION LOGICAL_OR_OPERATOR LOGICAL_AND_EXPRESSION

   60 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION
   61                       | LOGICAL_OR_EXPRESSION TERNARY_OPERATOR EXPRESSION TERNARY_SEPERATOR CONDITIONAL_EXPRESSION

   62 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION
   63                      | UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

   64 ASSIGNMENT_OPERATOR: EQUAL_OPERATOR
   65                    | ASSIGNMENT_OPERATORS

   66 EXPRESSION: ASSIGNMENT_EXPRESSION
   67           | EXPRESSION COMMA ASSIGNMENT_EXPRESSION

   68 CONSTANT_EXPRESSION: CONDITIONAL_EXPRESSION

   69 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATOR_LIST_OPT SEMI_COLON

   70 INIT_DECLARATOR_LIST_OPT: INIT_DECLARATOR_LIST
   71                         | ε

   72 DECLARATION_SPECIFIERS: STORAGE_CLASS_SPECIFIER DECLARATION_SPECIFIERS_OPT
   73                       | TYPE_SPECIFIER DECLARATION_SPECIFIERS_OPT
   74                       | TYPE_QUALIFIER DECLARATION_SPECIFIERS_OPT
   75                       | FUNCTION_SPECIFIER DECLARATION_SPECIFIERS_OPT

   76 DECLARATION_SPECIFIERS_OPT: DECLARATION_SPECIFIERS
   77                           | ε

   78 INIT_DECLARATOR_LIST: INIT_DECLARATOR
   79                     | INIT_DECLARATOR_LIST COMMA INIT_DECLARATOR

   80 INIT_DECLARATOR: DECLARATOR
   81                | DECLARATOR EQUAL_OPERATOR INITIALIZER

   82 STORAGE_CLASS_SPECIFIER: EXTERN
   83                        | STATIC
   84                        | AUTO
   85                        | REGISTER

   86 TYPE_SPECIFIER: VOID
   87               | CHAR
   88               | SHORT
   89               | INT
   90               | LONG
   91               | FLOAT
   92               | DOUBLE
   93               | SIGNED
   94               | UNSIGNED
   95               | BOOL
   96               | COMPLEX
   97               | IMAGINARY

   98 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER SPECIFIER_QUALIFIER_LIST_OPT
   99                         | TYPE_QUALIFIER SPECIFIER_QUALIFIER_LIST_OPT

  100 SPECIFIER_QUALIFIER_LIST_OPT: SPECIFIER_QUALIFIER_LIST
  101                             | ε

  102 TYPE_QUALIFIER: CONST
  103               | RESTRICT
  104               | VOLATILE

  105 FUNCTION_SPECIFIER: INLINE

  106 DECLARATOR: POINTER_OPT DIRECT_DECLARATOR

  107 POINTER_OPT: POINTER
  108            | ε

  109 DIRECT_DECLARATOR: IDENTIFIER
  110                  | LEFT_PARANTHESIS DECLARATOR RIGHT_PARANTHESIS
  111                  | DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST_OPT ASSIGNMENT_EXPRESSION_OPT RIGHT_SQUARE_BRACKET
  112                  | DIRECT_DECLARATOR LEFT_SQUARE_BRACKET STATIC TYPE_QUALIFIER_LIST_OPT ASSIGNMENT_EXPRESSION RIGHT_SQUARE_BRACKET
  113                  | DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST STATIC ASSIGNMENT_EXPRESSION RIGHT_SQUARE_BRACKET
  114                  | DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST_OPT MULTIPLICATION_OPERATOR RIGHT_SQUARE_BRACKET
  115                  | DIRECT_DECLARATOR LEFT_PARANTHESIS PARAMETER_TYPE_LIST RIGHT_PARANTHESIS
  116                  | DIRECT_DECLARATOR LEFT_PARANTHESIS IDENTIFIER_LIST_OPT RIGHT_PARANTHESIS

  117 ASSIGNMENT_EXPRESSION_OPT: ASSIGNMENT_EXPRESSION
  118                          | ε

  119 POINTER: MULTIPLICATION_OPERATOR TYPE_QUALIFIER_LIST_OPT
  120        | MULTIPLICATION_OPERATOR TYPE_QUALIFIER_LIST_OPT POINTER

  121 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER
  122                    | TYPE_QUALIFIER_LIST TYPE_QUALIFIER

  123 TYPE_QUALIFIER_LIST_OPT: TYPE_QUALIFIER_LIST
  124                        | ε

  125 PARAMETER_TYPE_LIST: PARAMETER_LIST
  126                    | PARAMETER_LIST COMMA TRIPLE_DOT

  127 PARAMETER_LIST: PARAMETER_DECLARATION
  128               | PARAMETER_LIST COMMA PARAMETER_DECLARATION

  129 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS DECLARATOR
  130                      | DECLARATION_SPECIFIERS

  131 IDENTIFIER_LIST: IDENTIFIER
  132                | IDENTIFIER_LIST COMMA IDENTIFIER

  133 IDENTIFIER_LIST_OPT: IDENTIFIER_LIST
  134                    | ε

  135 TYPE_NAME: SPECIFIER_QUALIFIER_LIST

  136 INITIALIZER: ASSIGNMENT_EXPRESSION
  137            | LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET
  138            | LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET

  139 INITIALIZER_LIST: DESIGNATION_OPT INITIALIZER
  140                 | INITIALIZER_LIST COMMA DESIGNATION_OPT INITIALIZER

  141 DESIGNATION_OPT: DESIGNATION
  142                | ε

  143 DESIGNATION: DESIGNATOR_LIST EQUAL_OPERATOR

  144 DESIGNATOR_LIST: DESIGNATOR
  145                | DESIGNATOR_LIST DESIGNATOR

  146 DESIGNATOR: LEFT_SQUARE_BRACKET CONSTANT_EXPRESSION RIGHT_SQUARE_BRACKET
  147           | DOT IDENTIFIER

  148 STATEMENT: LABELED_STATEMENT
  149          | COMPOUND_STATEMENT
  150          | EXPRESSION_STATEMENT
  151          | SELECTION_STATEMENT
  152          | ITERATION_STATEMENT
  153          | JUMP_STATEMENT

  154 LABELED_STATEMENT: IDENTIFIER TERNARY_SEPERATOR STATEMENT
  155                  | CASE CONSTANT_EXPRESSION TERNARY_SEPERATOR STATEMENT
  156                  | DEFAULT TERNARY_SEPERATOR STATEMENT

  157 COMPOUND_STATEMENT: LEFT_CURLY_BRACKET BLOCK_ITEM_LIST_OPT RIGHT_CURLY_BRACKET

  158 BLOCK_ITEM_LIST: BLOCK_ITEM
  159                | BLOCK_ITEM_LIST BLOCK_ITEM

  160 BLOCK_ITEM: DECLARATION
  161           | STATEMENT

  162 EXPRESSION_STATEMENT: EXPRESSION_OPT SEMI_COLON

  163 SELECTION_STATEMENT: IF LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT
  164                    | IF LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT ELSE STATEMENT
  165                    | SWITCH LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT

  166 ITERATION_STATEMENT: WHILE LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT
  167                    | DO STATEMENT WHILE LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS SEMI_COLON
  168                    | FOR LEFT_PARANTHESIS EXPRESSION_OPT SEMI_COLON EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT
  169                    | FOR LEFT_PARANTHESIS DECLARATION EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT

  170 JUMP_STATEMENT: GOTO IDENTIFIER SEMI_COLON
  171               | CONTINUE SEMI_COLON
  172               | BREAK SEMI_COLON
  173               | RETURN EXPRESSION_OPT SEMI_COLON

  174 BLOCK_ITEM_LIST_OPT: BLOCK_ITEM_LIST
  175                    | ε

  176 EXPRESSION_OPT: EXPRESSION
  177               | ε

  178 TRANSLATIONAL_UNIT: EXTERNAL_DECLARATION
  179                   | TRANSLATIONAL_UNIT EXTERNAL_DECLARATION

  180 EXTERNAL_DECLARATION: FUNCTION_DEFINITION
  181                     | DECLARATION

  182 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR DECLARATION_LIST_OPT COMPOUND_STATEMENT

  183 DECLARATION_LIST: DECLARATION
  184                 | DECLARATION_LIST DECLARATION

  185 DECLARATION_LIST_OPT: DECLARATION_LIST
  186                     | ε


Terminals, with rules where they appear

    $end (0) 0
    ';' (59) 168 169
    error (256)
    RIGHT_PARANTHESIS (258) 4 7 12 13 23 31 110 115 116 163 164 165 166 167 168 169
    ELSE (259) 164
    AUTO (260) 84
    ENUM (261)
    RESTRICT (262) 103
    UNSIGNED (263) 94
    BREAK (264) 172
    EXTERN (265) 82
    RETURN (266) 173
    VOID (267) 86
    CASE (268) 155
    FLOAT (269) 91
    SHORT (270) 88
    VOLATILE (271) 104
    CHAR (272) 87
    FOR (273) 168 169
    SIGNED (274) 93
    WHILE (275) 166 167
    CONST (276) 102
    GOTO (277) 170
    SIZEOF (278) 22 23
    BOOL (279) 95
    CONTINUE (280) 171
    IF (281) 163 164
    STATIC (282) 83 112 113
    COMPLEX (283) 96
    DEFAULT (284) 156
    INLINE (285) 105
    STRUCT (286)
    IMAGINARY (287) 97
    DO (288) 167
    INT (289) 89
    SWITCH (290) 165
    DOUBLE (291) 92
    LONG (292) 90
    TYPEDEF (293)
    REGISTER (294) 85
    UNION (295)
    IDENTIFIER (296) 1 8 9 109 131 132 147 154 170
    STRING_LITERAL (297) 3
    CONSTANT (298) 2
    LESS_THAN (299) 43
    LESS_THAN_EQUAL_TO (300) 45
    GREATER_THAN (301) 44
    GREATER_THAN_EQUAL_TO (302) 46
    ESCAPE_OPERATOR (303)
    LEFT_SQUARE_BRACKET (304) 6 111 112 113 114 146
    RIGHT_SQUARE_BRACKET (305) 6 111 112 113 114 146
    LEFT_PARANTHESIS (306) 4 7 12 13 23 31 110 115 116 163 164 165 166 167 168 169
    LEFT_CURLY_BRACKET (307) 12 13 137 138 157
    RIGHT_CURLY_BRACKET (308) 12 13 137 138 157
    DOT (309) 8 147
    POINTER_ACCESS (310) 9
    INCREMENT_OPERATOR (311) 10 19
    DECREMENT_OPERATOR (312) 11 20
    DIVIDE_OPERATOR (313) 34
    REMAINDER_OPERATOR (314) 35
    SHIFT_LEFT_OPERATOR (315) 40
    SHIFT_RIGHT_OPERATOR (316) 41
    EQUALITY_OPERATOR (317) 48
    NON_EQUALITY_OPERATOR (318) 49
    XOR_OPERATOR (319) 53
    BITWISE_OR_OPERATOR (320) 55
    BITWISE_AND_OPERATOR (321) 27 51
    LOGICAL_AND_OPERATOR (322) 57
    LOGICAL_OR_OPERATOR (323) 59
    TERNARY_OPERATOR (324) 61
    TERNARY_SEPERATOR (325) 61 154 155 156
    SEMI_COLON (326) 69 162 167 168 170 171 172 173
    COMMA (327) 13 15 67 79 126 128 132 138 140
    MACRO_OPERATOR (328)
    TRIPLE_DOT (329) 126
    ADDITION_OPERATOR (330) 24 37
    MULTIPLICATION_OPERATOR (331) 26 33 114 119 120
    SUBTRACTION_OPERATOR (332) 25 38
    NOT_OPERATOR (333) 29
    NEGATION_OPERATOR (334) 28
    EQUAL_OPERATOR (335) 64 81 143
    ASSIGNMENT_OPERATORS (336) 65


Nonterminals, with rules where they appear

    $accept (83)
        on left: 0
    PRIMARY_EXPRESSION (84)
        on left: 1 2 3 4
        on right: 5
    POSTFIX_EXPRESSION (85)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 6 7 8 9 10 11 18
    ARGUMENT_EXPRESSION_LIST (86)
        on left: 14 15
        on right: 15 16
    ARGUMENT_EXPRESSION_LIST_OPT (87)
        on left: 16 17
        on right: 7
    UNARY_EXPRESSION (88)
        on left: 18 19 20 21 22 23
        on right: 19 20 22 30 63
    UNARY_OPEARATOR (89)
        on left: 24 25 26 27 28 29
        on right: 21
    CAST_EXPRESSION (90)
        on left: 30 31
        on right: 21 31 32 33 34 35
    MULTIPLICATIVE_EXPRESSION (91)
        on left: 32 33 34 35
        on right: 33 34 35 36 37 38
    ADDITIVE_EXPRESSION (92)
        on left: 36 37 38
        on right: 37 38 39 40 41
    SHIFT_EXPRESSION (93)
        on left: 39 40 41
        on right: 40 41 42 43 44 45 46
    RELATIONAL_EXPRESSION (94)
        on left: 42 43 44 45 46
        on right: 43 44 45 46 47 48 49
    EQUALITY_EXPRESSION (95)
        on left: 47 48 49
        on right: 48 49 50 51
    AND_EXPRESSION (96)
        on left: 50 51
        on right: 51 52 53
    EXCLUSIVE_OR_EXPRESSION (97)
        on left: 52 53
        on right: 53 54 55
    INCLUSIVE_OR_EXPRESSION (98)
        on left: 54 55
        on right: 55 56 57
    LOGICAL_AND_EXPRESSION (99)
        on left: 56 57
        on right: 57 58 59
    LOGICAL_OR_EXPRESSION (100)
        on left: 58 59
        on right: 59 60 61
    CONDITIONAL_EXPRESSION (101)
        on left: 60 61
        on right: 61 62 68
    ASSIGNMENT_EXPRESSION (102)
        on left: 62 63
        on right: 14 15 63 66 67 112 113 117 136
    ASSIGNMENT_OPERATOR (103)
        on left: 64 65
        on right: 63
    EXPRESSION (104)
        on left: 66 67
        on right: 4 6 61 67 163 164 165 166 167 176
    CONSTANT_EXPRESSION (105)
        on left: 68
        on right: 146 155
    DECLARATION (106)
        on left: 69
        on right: 160 169 181 183 184
    INIT_DECLARATOR_LIST_OPT (107)
        on left: 70 71
        on right: 69
    DECLARATION_SPECIFIERS (108)
        on left: 72 73 74 75
        on right: 69 76 129 130 182
    DECLARATION_SPECIFIERS_OPT (109)
        on left: 76 77
        on right: 72 73 74 75
    INIT_DECLARATOR_LIST (110)
        on left: 78 79
        on right: 70 79
    INIT_DECLARATOR (111)
        on left: 80 81
        on right: 78 79
    STORAGE_CLASS_SPECIFIER (112)
        on left: 82 83 84 85
        on right: 72
    TYPE_SPECIFIER (113)
        on left: 86 87 88 89 90 91 92 93 94 95 96 97
        on right: 73 98
    SPECIFIER_QUALIFIER_LIST (114)
        on left: 98 99
        on right: 100 135
    SPECIFIER_QUALIFIER_LIST_OPT (115)
        on left: 100 101
        on right: 98 99
    TYPE_QUALIFIER (116)
        on left: 102 103 104
        on right: 74 99 121 122
    FUNCTION_SPECIFIER (117)
        on left: 105
        on right: 75
    DECLARATOR (118)
        on left: 106
        on right: 80 81 110 129 182
    POINTER_OPT (119)
        on left: 107 108
        on right: 106
    DIRECT_DECLARATOR (120)
        on left: 109 110 111 112 113 114 115 116
        on right: 106 111 112 113 114 115 116
    ASSIGNMENT_EXPRESSION_OPT (121)
        on left: 117 118
        on right: 111
    POINTER (122)
        on left: 119 120
        on right: 107 120
    TYPE_QUALIFIER_LIST (123)
        on left: 121 122
        on right: 113 122 123
    TYPE_QUALIFIER_LIST_OPT (124)
        on left: 123 124
        on right: 111 112 114 119 120
    PARAMETER_TYPE_LIST (125)
        on left: 125 126
        on right: 115
    PARAMETER_LIST (126)
        on left: 127 128
        on right: 125 126 128
    PARAMETER_DECLARATION (127)
        on left: 129 130
        on right: 127 128
    IDENTIFIER_LIST (128)
        on left: 131 132
        on right: 132 133
    IDENTIFIER_LIST_OPT (129)
        on left: 133 134
        on right: 116
    TYPE_NAME (130)
        on left: 135
        on right: 12 13 23 31
    INITIALIZER (131)
        on left: 136 137 138
        on right: 81 139 140
    INITIALIZER_LIST (132)
        on left: 139 140
        on right: 12 13 137 138 140
    DESIGNATION_OPT (133)
        on left: 141 142
        on right: 139 140
    DESIGNATION (134)
        on left: 143
        on right: 141
    DESIGNATOR_LIST (135)
        on left: 144 145
        on right: 143 145
    DESIGNATOR (136)
        on left: 146 147
        on right: 144 145
    STATEMENT (137)
        on left: 148 149 150 151 152 153
        on right: 154 155 156 161 163 164 165 166 167 168 169
    LABELED_STATEMENT (138)
        on left: 154 155 156
        on right: 148
    COMPOUND_STATEMENT (139)
        on left: 157
        on right: 149 182
    BLOCK_ITEM_LIST (140)
        on left: 158 159
        on right: 159 174
    BLOCK_ITEM (141)
        on left: 160 161
        on right: 158 159
    EXPRESSION_STATEMENT (142)
        on left: 162
        on right: 150
    SELECTION_STATEMENT (143)
        on left: 163 164 165
        on right: 151
    ITERATION_STATEMENT (144)
        on left: 166 167 168 169
        on right: 152
    JUMP_STATEMENT (145)
        on left: 170 171 172 173
        on right: 153
    BLOCK_ITEM_LIST_OPT (146)
        on left: 174 175
        on right: 157
    EXPRESSION_OPT (147)
        on left: 176 177
        on right: 162 168 169 173
    TRANSLATIONAL_UNIT (148)
        on left: 178 179
        on right: 0 179
    EXTERNAL_DECLARATION (149)
        on left: 180 181
        on right: 178 179
    FUNCTION_DEFINITION (150)
        on left: 182
        on right: 180
    DECLARATION_LIST (151)
        on left: 183 184
        on right: 184 185
    DECLARATION_LIST_OPT (152)
        on left: 185 186
        on right: 182


State 0

    0 $accept: • TRANSLATIONAL_UNIT $end

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    DECLARATION              go to state 21
    DECLARATION_SPECIFIERS   go to state 22
    STORAGE_CLASS_SPECIFIER  go to state 23
    TYPE_SPECIFIER           go to state 24
    TYPE_QUALIFIER           go to state 25
    FUNCTION_SPECIFIER       go to state 26
    TRANSLATIONAL_UNIT       go to state 27
    EXTERNAL_DECLARATION     go to state 28
    FUNCTION_DEFINITION      go to state 29


State 1

   84 STORAGE_CLASS_SPECIFIER: AUTO •

    $default  reduce using rule 84 (STORAGE_CLASS_SPECIFIER)


State 2

  103 TYPE_QUALIFIER: RESTRICT •

    $default  reduce using rule 103 (TYPE_QUALIFIER)


State 3

   94 TYPE_SPECIFIER: UNSIGNED •

    $default  reduce using rule 94 (TYPE_SPECIFIER)


State 4

   82 STORAGE_CLASS_SPECIFIER: EXTERN •

    $default  reduce using rule 82 (STORAGE_CLASS_SPECIFIER)


State 5

   86 TYPE_SPECIFIER: VOID •

    $default  reduce using rule 86 (TYPE_SPECIFIER)


State 6

   91 TYPE_SPECIFIER: FLOAT •

    $default  reduce using rule 91 (TYPE_SPECIFIER)


State 7

   88 TYPE_SPECIFIER: SHORT •

    $default  reduce using rule 88 (TYPE_SPECIFIER)


State 8

  104 TYPE_QUALIFIER: VOLATILE •

    $default  reduce using rule 104 (TYPE_QUALIFIER)


State 9

   87 TYPE_SPECIFIER: CHAR •

    $default  reduce using rule 87 (TYPE_SPECIFIER)


State 10

   93 TYPE_SPECIFIER: SIGNED •

    $default  reduce using rule 93 (TYPE_SPECIFIER)


State 11

  102 TYPE_QUALIFIER: CONST •

    $default  reduce using rule 102 (TYPE_QUALIFIER)


State 12

   95 TYPE_SPECIFIER: BOOL •

    $default  reduce using rule 95 (TYPE_SPECIFIER)


State 13

   83 STORAGE_CLASS_SPECIFIER: STATIC •

    $default  reduce using rule 83 (STORAGE_CLASS_SPECIFIER)


State 14

   96 TYPE_SPECIFIER: COMPLEX •

    $default  reduce using rule 96 (TYPE_SPECIFIER)


State 15

  105 FUNCTION_SPECIFIER: INLINE •

    $default  reduce using rule 105 (FUNCTION_SPECIFIER)


State 16

   97 TYPE_SPECIFIER: IMAGINARY •

    $default  reduce using rule 97 (TYPE_SPECIFIER)


State 17

   89 TYPE_SPECIFIER: INT •

    $default  reduce using rule 89 (TYPE_SPECIFIER)


State 18

   92 TYPE_SPECIFIER: DOUBLE •

    $default  reduce using rule 92 (TYPE_SPECIFIER)


State 19

   90 TYPE_SPECIFIER: LONG •

    $default  reduce using rule 90 (TYPE_SPECIFIER)


State 20

   85 STORAGE_CLASS_SPECIFIER: REGISTER •

    $default  reduce using rule 85 (STORAGE_CLASS_SPECIFIER)


State 21

  181 EXTERNAL_DECLARATION: DECLARATION •

    $default  reduce using rule 181 (EXTERNAL_DECLARATION)


State 22

   69 DECLARATION: DECLARATION_SPECIFIERS • INIT_DECLARATOR_LIST_OPT SEMI_COLON
  182 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS • DECLARATOR DECLARATION_LIST_OPT COMPOUND_STATEMENT

    MULTIPLICATION_OPERATOR  shift, and go to state 30

    SEMI_COLON  reduce using rule 71 (INIT_DECLARATOR_LIST_OPT)
    $default    reduce using rule 108 (POINTER_OPT)

    INIT_DECLARATOR_LIST_OPT  go to state 31
    INIT_DECLARATOR_LIST      go to state 32
    INIT_DECLARATOR           go to state 33
    DECLARATOR                go to state 34
    POINTER_OPT               go to state 35
    POINTER                   go to state 36


State 23

   72 DECLARATION_SPECIFIERS: STORAGE_CLASS_SPECIFIER • DECLARATION_SPECIFIERS_OPT

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    $default  reduce using rule 77 (DECLARATION_SPECIFIERS_OPT)

    DECLARATION_SPECIFIERS      go to state 37
    DECLARATION_SPECIFIERS_OPT  go to state 38
    STORAGE_CLASS_SPECIFIER     go to state 23
    TYPE_SPECIFIER              go to state 24
    TYPE_QUALIFIER              go to state 25
    FUNCTION_SPECIFIER          go to state 26


State 24

   73 DECLARATION_SPECIFIERS: TYPE_SPECIFIER • DECLARATION_SPECIFIERS_OPT

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    $default  reduce using rule 77 (DECLARATION_SPECIFIERS_OPT)

    DECLARATION_SPECIFIERS      go to state 37
    DECLARATION_SPECIFIERS_OPT  go to state 39
    STORAGE_CLASS_SPECIFIER     go to state 23
    TYPE_SPECIFIER              go to state 24
    TYPE_QUALIFIER              go to state 25
    FUNCTION_SPECIFIER          go to state 26


State 25

   74 DECLARATION_SPECIFIERS: TYPE_QUALIFIER • DECLARATION_SPECIFIERS_OPT

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    $default  reduce using rule 77 (DECLARATION_SPECIFIERS_OPT)

    DECLARATION_SPECIFIERS      go to state 37
    DECLARATION_SPECIFIERS_OPT  go to state 40
    STORAGE_CLASS_SPECIFIER     go to state 23
    TYPE_SPECIFIER              go to state 24
    TYPE_QUALIFIER              go to state 25
    FUNCTION_SPECIFIER          go to state 26


State 26

   75 DECLARATION_SPECIFIERS: FUNCTION_SPECIFIER • DECLARATION_SPECIFIERS_OPT

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    $default  reduce using rule 77 (DECLARATION_SPECIFIERS_OPT)

    DECLARATION_SPECIFIERS      go to state 37
    DECLARATION_SPECIFIERS_OPT  go to state 41
    STORAGE_CLASS_SPECIFIER     go to state 23
    TYPE_SPECIFIER              go to state 24
    TYPE_QUALIFIER              go to state 25
    FUNCTION_SPECIFIER          go to state 26


State 27

    0 $accept: TRANSLATIONAL_UNIT • $end
  179 TRANSLATIONAL_UNIT: TRANSLATIONAL_UNIT • EXTERNAL_DECLARATION

    $end       shift, and go to state 42
    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    DECLARATION              go to state 21
    DECLARATION_SPECIFIERS   go to state 22
    STORAGE_CLASS_SPECIFIER  go to state 23
    TYPE_SPECIFIER           go to state 24
    TYPE_QUALIFIER           go to state 25
    FUNCTION_SPECIFIER       go to state 26
    EXTERNAL_DECLARATION     go to state 43
    FUNCTION_DEFINITION      go to state 29


State 28

  178 TRANSLATIONAL_UNIT: EXTERNAL_DECLARATION •

    $default  reduce using rule 178 (TRANSLATIONAL_UNIT)


State 29

  180 EXTERNAL_DECLARATION: FUNCTION_DEFINITION •

    $default  reduce using rule 180 (EXTERNAL_DECLARATION)


State 30

  119 POINTER: MULTIPLICATION_OPERATOR • TYPE_QUALIFIER_LIST_OPT
  120        | MULTIPLICATION_OPERATOR • TYPE_QUALIFIER_LIST_OPT POINTER

    RESTRICT  shift, and go to state 2
    VOLATILE  shift, and go to state 8
    CONST     shift, and go to state 11

    $default  reduce using rule 124 (TYPE_QUALIFIER_LIST_OPT)

    TYPE_QUALIFIER           go to state 44
    TYPE_QUALIFIER_LIST      go to state 45
    TYPE_QUALIFIER_LIST_OPT  go to state 46


State 31

   69 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATOR_LIST_OPT • SEMI_COLON

    SEMI_COLON  shift, and go to state 47


State 32

   70 INIT_DECLARATOR_LIST_OPT: INIT_DECLARATOR_LIST •
   79 INIT_DECLARATOR_LIST: INIT_DECLARATOR_LIST • COMMA INIT_DECLARATOR

    COMMA  shift, and go to state 48

    $default  reduce using rule 70 (INIT_DECLARATOR_LIST_OPT)


State 33

   78 INIT_DECLARATOR_LIST: INIT_DECLARATOR •

    $default  reduce using rule 78 (INIT_DECLARATOR_LIST)


State 34

   80 INIT_DECLARATOR: DECLARATOR •
   81                | DECLARATOR • EQUAL_OPERATOR INITIALIZER
  182 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR • DECLARATION_LIST_OPT COMPOUND_STATEMENT

    AUTO            shift, and go to state 1
    RESTRICT        shift, and go to state 2
    UNSIGNED        shift, and go to state 3
    EXTERN          shift, and go to state 4
    VOID            shift, and go to state 5
    FLOAT           shift, and go to state 6
    SHORT           shift, and go to state 7
    VOLATILE        shift, and go to state 8
    CHAR            shift, and go to state 9
    SIGNED          shift, and go to state 10
    CONST           shift, and go to state 11
    BOOL            shift, and go to state 12
    STATIC          shift, and go to state 13
    COMPLEX         shift, and go to state 14
    INLINE          shift, and go to state 15
    IMAGINARY       shift, and go to state 16
    INT             shift, and go to state 17
    DOUBLE          shift, and go to state 18
    LONG            shift, and go to state 19
    REGISTER        shift, and go to state 20
    EQUAL_OPERATOR  shift, and go to state 49

    LEFT_CURLY_BRACKET  reduce using rule 186 (DECLARATION_LIST_OPT)
    $default            reduce using rule 80 (INIT_DECLARATOR)

    DECLARATION              go to state 50
    DECLARATION_SPECIFIERS   go to state 51
    STORAGE_CLASS_SPECIFIER  go to state 23
    TYPE_SPECIFIER           go to state 24
    TYPE_QUALIFIER           go to state 25
    FUNCTION_SPECIFIER       go to state 26
    DECLARATION_LIST         go to state 52
    DECLARATION_LIST_OPT     go to state 53


State 35

  106 DECLARATOR: POINTER_OPT • DIRECT_DECLARATOR

    IDENTIFIER        shift, and go to state 54
    LEFT_PARANTHESIS  shift, and go to state 55

    DIRECT_DECLARATOR  go to state 56


State 36

  107 POINTER_OPT: POINTER •

    $default  reduce using rule 107 (POINTER_OPT)


State 37

   76 DECLARATION_SPECIFIERS_OPT: DECLARATION_SPECIFIERS •

    $default  reduce using rule 76 (DECLARATION_SPECIFIERS_OPT)


State 38

   72 DECLARATION_SPECIFIERS: STORAGE_CLASS_SPECIFIER DECLARATION_SPECIFIERS_OPT •

    $default  reduce using rule 72 (DECLARATION_SPECIFIERS)


State 39

   73 DECLARATION_SPECIFIERS: TYPE_SPECIFIER DECLARATION_SPECIFIERS_OPT •

    $default  reduce using rule 73 (DECLARATION_SPECIFIERS)


State 40

   74 DECLARATION_SPECIFIERS: TYPE_QUALIFIER DECLARATION_SPECIFIERS_OPT •

    $default  reduce using rule 74 (DECLARATION_SPECIFIERS)


State 41

   75 DECLARATION_SPECIFIERS: FUNCTION_SPECIFIER DECLARATION_SPECIFIERS_OPT •

    $default  reduce using rule 75 (DECLARATION_SPECIFIERS)


State 42

    0 $accept: TRANSLATIONAL_UNIT $end •

    $default  accept


State 43

  179 TRANSLATIONAL_UNIT: TRANSLATIONAL_UNIT EXTERNAL_DECLARATION •

    $default  reduce using rule 179 (TRANSLATIONAL_UNIT)


State 44

  121 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER •

    $default  reduce using rule 121 (TYPE_QUALIFIER_LIST)


State 45

  122 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER_LIST • TYPE_QUALIFIER
  123 TYPE_QUALIFIER_LIST_OPT: TYPE_QUALIFIER_LIST •

    RESTRICT  shift, and go to state 2
    VOLATILE  shift, and go to state 8
    CONST     shift, and go to state 11

    $default  reduce using rule 123 (TYPE_QUALIFIER_LIST_OPT)

    TYPE_QUALIFIER  go to state 57


State 46

  119 POINTER: MULTIPLICATION_OPERATOR TYPE_QUALIFIER_LIST_OPT •
  120        | MULTIPLICATION_OPERATOR TYPE_QUALIFIER_LIST_OPT • POINTER

    MULTIPLICATION_OPERATOR  shift, and go to state 30

    $default  reduce using rule 119 (POINTER)

    POINTER  go to state 58


State 47

   69 DECLARATION: DECLARATION_SPECIFIERS INIT_DECLARATOR_LIST_OPT SEMI_COLON •

    $default  reduce using rule 69 (DECLARATION)


State 48

   79 INIT_DECLARATOR_LIST: INIT_DECLARATOR_LIST COMMA • INIT_DECLARATOR

    MULTIPLICATION_OPERATOR  shift, and go to state 30

    $default  reduce using rule 108 (POINTER_OPT)

    INIT_DECLARATOR  go to state 59
    DECLARATOR       go to state 60
    POINTER_OPT      go to state 35
    POINTER          go to state 36


State 49

   81 INIT_DECLARATOR: DECLARATOR EQUAL_OPERATOR • INITIALIZER

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 66
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 91
    INITIALIZER                go to state 92


State 50

  183 DECLARATION_LIST: DECLARATION •

    $default  reduce using rule 183 (DECLARATION_LIST)


State 51

   69 DECLARATION: DECLARATION_SPECIFIERS • INIT_DECLARATOR_LIST_OPT SEMI_COLON

    MULTIPLICATION_OPERATOR  shift, and go to state 30

    SEMI_COLON  reduce using rule 71 (INIT_DECLARATOR_LIST_OPT)
    $default    reduce using rule 108 (POINTER_OPT)

    INIT_DECLARATOR_LIST_OPT  go to state 31
    INIT_DECLARATOR_LIST      go to state 32
    INIT_DECLARATOR           go to state 33
    DECLARATOR                go to state 60
    POINTER_OPT               go to state 35
    POINTER                   go to state 36


State 52

  184 DECLARATION_LIST: DECLARATION_LIST • DECLARATION
  185 DECLARATION_LIST_OPT: DECLARATION_LIST •

    AUTO       shift, and go to state 1
    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    EXTERN     shift, and go to state 4
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    STATIC     shift, and go to state 13
    COMPLEX    shift, and go to state 14
    INLINE     shift, and go to state 15
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19
    REGISTER   shift, and go to state 20

    $default  reduce using rule 185 (DECLARATION_LIST_OPT)

    DECLARATION              go to state 93
    DECLARATION_SPECIFIERS   go to state 51
    STORAGE_CLASS_SPECIFIER  go to state 23
    TYPE_SPECIFIER           go to state 24
    TYPE_QUALIFIER           go to state 25
    FUNCTION_SPECIFIER       go to state 26


State 53

  182 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR DECLARATION_LIST_OPT • COMPOUND_STATEMENT

    LEFT_CURLY_BRACKET  shift, and go to state 94

    COMPOUND_STATEMENT  go to state 95


State 54

  109 DIRECT_DECLARATOR: IDENTIFIER •

    $default  reduce using rule 109 (DIRECT_DECLARATOR)


State 55

  110 DIRECT_DECLARATOR: LEFT_PARANTHESIS • DECLARATOR RIGHT_PARANTHESIS

    MULTIPLICATION_OPERATOR  shift, and go to state 30

    $default  reduce using rule 108 (POINTER_OPT)

    DECLARATOR   go to state 96
    POINTER_OPT  go to state 35
    POINTER      go to state 36


State 56

  106 DECLARATOR: POINTER_OPT DIRECT_DECLARATOR •
  111 DIRECT_DECLARATOR: DIRECT_DECLARATOR • LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST_OPT ASSIGNMENT_EXPRESSION_OPT RIGHT_SQUARE_BRACKET
  112                  | DIRECT_DECLARATOR • LEFT_SQUARE_BRACKET STATIC TYPE_QUALIFIER_LIST_OPT ASSIGNMENT_EXPRESSION RIGHT_SQUARE_BRACKET
  113                  | DIRECT_DECLARATOR • LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST STATIC ASSIGNMENT_EXPRESSION RIGHT_SQUARE_BRACKET
  114                  | DIRECT_DECLARATOR • LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST_OPT MULTIPLICATION_OPERATOR RIGHT_SQUARE_BRACKET
  115                  | DIRECT_DECLARATOR • LEFT_PARANTHESIS PARAMETER_TYPE_LIST RIGHT_PARANTHESIS
  116                  | DIRECT_DECLARATOR • LEFT_PARANTHESIS IDENTIFIER_LIST_OPT RIGHT_PARANTHESIS

    LEFT_SQUARE_BRACKET  shift, and go to state 97
    LEFT_PARANTHESIS     shift, and go to state 98

    $default  reduce using rule 106 (DECLARATOR)


State 57

  122 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER_LIST TYPE_QUALIFIER •

    $default  reduce using rule 122 (TYPE_QUALIFIER_LIST)


State 58

  120 POINTER: MULTIPLICATION_OPERATOR TYPE_QUALIFIER_LIST_OPT POINTER •

    $default  reduce using rule 120 (POINTER)


State 59

   79 INIT_DECLARATOR_LIST: INIT_DECLARATOR_LIST COMMA INIT_DECLARATOR •

    $default  reduce using rule 79 (INIT_DECLARATOR_LIST)


State 60

   80 INIT_DECLARATOR: DECLARATOR •
   81                | DECLARATOR • EQUAL_OPERATOR INITIALIZER

    EQUAL_OPERATOR  shift, and go to state 49

    $default  reduce using rule 80 (INIT_DECLARATOR)


State 61

   22 UNARY_EXPRESSION: SIZEOF • UNARY_EXPRESSION
   23                 | SIZEOF • LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 99
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION  go to state 75
    POSTFIX_EXPRESSION  go to state 76
    UNARY_EXPRESSION    go to state 100
    UNARY_OPEARATOR     go to state 78


State 62

    1 PRIMARY_EXPRESSION: IDENTIFIER •

    $default  reduce using rule 1 (PRIMARY_EXPRESSION)


State 63

    3 PRIMARY_EXPRESSION: STRING_LITERAL •

    $default  reduce using rule 3 (PRIMARY_EXPRESSION)


State 64

    2 PRIMARY_EXPRESSION: CONSTANT •

    $default  reduce using rule 2 (PRIMARY_EXPRESSION)


State 65

    4 PRIMARY_EXPRESSION: LEFT_PARANTHESIS • EXPRESSION RIGHT_PARANTHESIS
   12 POSTFIX_EXPRESSION: LEFT_PARANTHESIS • TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET
   13                   | LEFT_PARANTHESIS • TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET
   31 CAST_EXPRESSION: LEFT_PARANTHESIS • TYPE_NAME RIGHT_PARANTHESIS CAST_EXPRESSION

    RESTRICT                 shift, and go to state 2
    UNSIGNED                 shift, and go to state 3
    VOID                     shift, and go to state 5
    FLOAT                    shift, and go to state 6
    SHORT                    shift, and go to state 7
    VOLATILE                 shift, and go to state 8
    CHAR                     shift, and go to state 9
    SIGNED                   shift, and go to state 10
    CONST                    shift, and go to state 11
    SIZEOF                   shift, and go to state 61
    BOOL                     shift, and go to state 12
    COMPLEX                  shift, and go to state 14
    IMAGINARY                shift, and go to state 16
    INT                      shift, and go to state 17
    DOUBLE                   shift, and go to state 18
    LONG                     shift, and go to state 19
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 102
    TYPE_SPECIFIER             go to state 103
    SPECIFIER_QUALIFIER_LIST   go to state 104
    TYPE_QUALIFIER             go to state 105
    TYPE_NAME                  go to state 106


State 66

  137 INITIALIZER: LEFT_CURLY_BRACKET • INITIALIZER_LIST RIGHT_CURLY_BRACKET
  138            | LEFT_CURLY_BRACKET • INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 107
    DOT                  shift, and go to state 108

    $default  reduce using rule 142 (DESIGNATION_OPT)

    INITIALIZER_LIST  go to state 109
    DESIGNATION_OPT   go to state 110
    DESIGNATION       go to state 111
    DESIGNATOR_LIST   go to state 112
    DESIGNATOR        go to state 113


State 67

   19 UNARY_EXPRESSION: INCREMENT_OPERATOR • UNARY_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 114
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION  go to state 75
    POSTFIX_EXPRESSION  go to state 76
    UNARY_EXPRESSION    go to state 115
    UNARY_OPEARATOR     go to state 78


State 68

   20 UNARY_EXPRESSION: DECREMENT_OPERATOR • UNARY_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 114
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION  go to state 75
    POSTFIX_EXPRESSION  go to state 76
    UNARY_EXPRESSION    go to state 116
    UNARY_OPEARATOR     go to state 78


State 69

   27 UNARY_OPEARATOR: BITWISE_AND_OPERATOR •

    $default  reduce using rule 27 (UNARY_OPEARATOR)


State 70

   24 UNARY_OPEARATOR: ADDITION_OPERATOR •

    $default  reduce using rule 24 (UNARY_OPEARATOR)


State 71

   26 UNARY_OPEARATOR: MULTIPLICATION_OPERATOR •

    $default  reduce using rule 26 (UNARY_OPEARATOR)


State 72

   25 UNARY_OPEARATOR: SUBTRACTION_OPERATOR •

    $default  reduce using rule 25 (UNARY_OPEARATOR)


State 73

   29 UNARY_OPEARATOR: NOT_OPERATOR •

    $default  reduce using rule 29 (UNARY_OPEARATOR)


State 74

   28 UNARY_OPEARATOR: NEGATION_OPERATOR •

    $default  reduce using rule 28 (UNARY_OPEARATOR)


State 75

    5 POSTFIX_EXPRESSION: PRIMARY_EXPRESSION •

    $default  reduce using rule 5 (POSTFIX_EXPRESSION)


State 76

    6 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION • LEFT_SQUARE_BRACKET EXPRESSION RIGHT_SQUARE_BRACKET
    7                   | POSTFIX_EXPRESSION • LEFT_PARANTHESIS ARGUMENT_EXPRESSION_LIST_OPT RIGHT_PARANTHESIS
    8                   | POSTFIX_EXPRESSION • DOT IDENTIFIER
    9                   | POSTFIX_EXPRESSION • POINTER_ACCESS IDENTIFIER
   10                   | POSTFIX_EXPRESSION • INCREMENT_OPERATOR
   11                   | POSTFIX_EXPRESSION • DECREMENT_OPERATOR
   18 UNARY_EXPRESSION: POSTFIX_EXPRESSION •

    LEFT_SQUARE_BRACKET  shift, and go to state 117
    LEFT_PARANTHESIS     shift, and go to state 118
    DOT                  shift, and go to state 119
    POINTER_ACCESS       shift, and go to state 120
    INCREMENT_OPERATOR   shift, and go to state 121
    DECREMENT_OPERATOR   shift, and go to state 122

    $default  reduce using rule 18 (UNARY_EXPRESSION)


State 77

   30 CAST_EXPRESSION: UNARY_EXPRESSION •
   63 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION • ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION

    EQUAL_OPERATOR        shift, and go to state 123
    ASSIGNMENT_OPERATORS  shift, and go to state 124

    $default  reduce using rule 30 (CAST_EXPRESSION)

    ASSIGNMENT_OPERATOR  go to state 125


State 78

   21 UNARY_EXPRESSION: UNARY_OPEARATOR • CAST_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION  go to state 75
    POSTFIX_EXPRESSION  go to state 76
    UNARY_EXPRESSION    go to state 126
    UNARY_OPEARATOR     go to state 78
    CAST_EXPRESSION     go to state 127


State 79

   32 MULTIPLICATIVE_EXPRESSION: CAST_EXPRESSION •

    $default  reduce using rule 32 (MULTIPLICATIVE_EXPRESSION)


State 80

   33 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION • MULTIPLICATION_OPERATOR CAST_EXPRESSION
   34                          | MULTIPLICATIVE_EXPRESSION • DIVIDE_OPERATOR CAST_EXPRESSION
   35                          | MULTIPLICATIVE_EXPRESSION • REMAINDER_OPERATOR CAST_EXPRESSION
   36 ADDITIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION •

    DIVIDE_OPERATOR          shift, and go to state 128
    REMAINDER_OPERATOR       shift, and go to state 129
    MULTIPLICATION_OPERATOR  shift, and go to state 130

    $default  reduce using rule 36 (ADDITIVE_EXPRESSION)


State 81

   37 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION • ADDITION_OPERATOR MULTIPLICATIVE_EXPRESSION
   38                    | ADDITIVE_EXPRESSION • SUBTRACTION_OPERATOR MULTIPLICATIVE_EXPRESSION
   39 SHIFT_EXPRESSION: ADDITIVE_EXPRESSION •

    ADDITION_OPERATOR     shift, and go to state 131
    SUBTRACTION_OPERATOR  shift, and go to state 132

    $default  reduce using rule 39 (SHIFT_EXPRESSION)


State 82

   40 SHIFT_EXPRESSION: SHIFT_EXPRESSION • SHIFT_LEFT_OPERATOR ADDITIVE_EXPRESSION
   41                 | SHIFT_EXPRESSION • SHIFT_RIGHT_OPERATOR ADDITIVE_EXPRESSION
   42 RELATIONAL_EXPRESSION: SHIFT_EXPRESSION •

    SHIFT_LEFT_OPERATOR   shift, and go to state 133
    SHIFT_RIGHT_OPERATOR  shift, and go to state 134

    $default  reduce using rule 42 (RELATIONAL_EXPRESSION)


State 83

   43 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION • LESS_THAN SHIFT_EXPRESSION
   44                      | RELATIONAL_EXPRESSION • GREATER_THAN SHIFT_EXPRESSION
   45                      | RELATIONAL_EXPRESSION • LESS_THAN_EQUAL_TO SHIFT_EXPRESSION
   46                      | RELATIONAL_EXPRESSION • GREATER_THAN_EQUAL_TO SHIFT_EXPRESSION
   47 EQUALITY_EXPRESSION: RELATIONAL_EXPRESSION •

    LESS_THAN              shift, and go to state 135
    LESS_THAN_EQUAL_TO     shift, and go to state 136
    GREATER_THAN           shift, and go to state 137
    GREATER_THAN_EQUAL_TO  shift, and go to state 138

    $default  reduce using rule 47 (EQUALITY_EXPRESSION)


State 84

   48 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION • EQUALITY_OPERATOR RELATIONAL_EXPRESSION
   49                    | EQUALITY_EXPRESSION • NON_EQUALITY_OPERATOR RELATIONAL_EXPRESSION
   50 AND_EXPRESSION: EQUALITY_EXPRESSION •

    EQUALITY_OPERATOR      shift, and go to state 139
    NON_EQUALITY_OPERATOR  shift, and go to state 140

    $default  reduce using rule 50 (AND_EXPRESSION)


State 85

   51 AND_EXPRESSION: AND_EXPRESSION • BITWISE_AND_OPERATOR EQUALITY_EXPRESSION
   52 EXCLUSIVE_OR_EXPRESSION: AND_EXPRESSION •

    BITWISE_AND_OPERATOR  shift, and go to state 141

    $default  reduce using rule 52 (EXCLUSIVE_OR_EXPRESSION)


State 86

   53 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION • XOR_OPERATOR AND_EXPRESSION
   54 INCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION •

    XOR_OPERATOR  shift, and go to state 142

    $default  reduce using rule 54 (INCLUSIVE_OR_EXPRESSION)


State 87

   55 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION • BITWISE_OR_OPERATOR EXCLUSIVE_OR_EXPRESSION
   56 LOGICAL_AND_EXPRESSION: INCLUSIVE_OR_EXPRESSION •

    BITWISE_OR_OPERATOR  shift, and go to state 143

    $default  reduce using rule 56 (LOGICAL_AND_EXPRESSION)


State 88

   57 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION • LOGICAL_AND_OPERATOR INCLUSIVE_OR_EXPRESSION
   58 LOGICAL_OR_EXPRESSION: LOGICAL_AND_EXPRESSION •

    LOGICAL_AND_OPERATOR  shift, and go to state 144

    $default  reduce using rule 58 (LOGICAL_OR_EXPRESSION)


State 89

   59 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION • LOGICAL_OR_OPERATOR LOGICAL_AND_EXPRESSION
   60 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION •
   61                       | LOGICAL_OR_EXPRESSION • TERNARY_OPERATOR EXPRESSION TERNARY_SEPERATOR CONDITIONAL_EXPRESSION

    LOGICAL_OR_OPERATOR  shift, and go to state 145
    TERNARY_OPERATOR     shift, and go to state 146

    $default  reduce using rule 60 (CONDITIONAL_EXPRESSION)


State 90

   62 ASSIGNMENT_EXPRESSION: CONDITIONAL_EXPRESSION •

    $default  reduce using rule 62 (ASSIGNMENT_EXPRESSION)


State 91

  136 INITIALIZER: ASSIGNMENT_EXPRESSION •

    $default  reduce using rule 136 (INITIALIZER)


State 92

   81 INIT_DECLARATOR: DECLARATOR EQUAL_OPERATOR INITIALIZER •

    $default  reduce using rule 81 (INIT_DECLARATOR)


State 93

  184 DECLARATION_LIST: DECLARATION_LIST DECLARATION •

    $default  reduce using rule 184 (DECLARATION_LIST)


State 94

  157 COMPOUND_STATEMENT: LEFT_CURLY_BRACKET • BLOCK_ITEM_LIST_OPT RIGHT_CURLY_BRACKET

    AUTO                     shift, and go to state 1
    RESTRICT                 shift, and go to state 2
    UNSIGNED                 shift, and go to state 3
    BREAK                    shift, and go to state 147
    EXTERN                   shift, and go to state 4
    RETURN                   shift, and go to state 148
    VOID                     shift, and go to state 5
    CASE                     shift, and go to state 149
    FLOAT                    shift, and go to state 6
    SHORT                    shift, and go to state 7
    VOLATILE                 shift, and go to state 8
    CHAR                     shift, and go to state 9
    FOR                      shift, and go to state 150
    SIGNED                   shift, and go to state 10
    WHILE                    shift, and go to state 151
    CONST                    shift, and go to state 11
    GOTO                     shift, and go to state 152
    SIZEOF                   shift, and go to state 61
    BOOL                     shift, and go to state 12
    CONTINUE                 shift, and go to state 153
    IF                       shift, and go to state 154
    STATIC                   shift, and go to state 13
    COMPLEX                  shift, and go to state 14
    DEFAULT                  shift, and go to state 155
    INLINE                   shift, and go to state 15
    IMAGINARY                shift, and go to state 16
    DO                       shift, and go to state 156
    INT                      shift, and go to state 17
    SWITCH                   shift, and go to state 157
    DOUBLE                   shift, and go to state 18
    LONG                     shift, and go to state 19
    REGISTER                 shift, and go to state 20
    IDENTIFIER               shift, and go to state 158
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 94
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    SEMI_COLON  reduce using rule 177 (EXPRESSION_OPT)
    $default    reduce using rule 175 (BLOCK_ITEM_LIST_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    DECLARATION                go to state 160
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIER    go to state 23
    TYPE_SPECIFIER             go to state 24
    TYPE_QUALIFIER             go to state 25
    FUNCTION_SPECIFIER         go to state 26
    STATEMENT                  go to state 161
    LABELED_STATEMENT          go to state 162
    COMPOUND_STATEMENT         go to state 163
    BLOCK_ITEM_LIST            go to state 164
    BLOCK_ITEM                 go to state 165
    EXPRESSION_STATEMENT       go to state 166
    SELECTION_STATEMENT        go to state 167
    ITERATION_STATEMENT        go to state 168
    JUMP_STATEMENT             go to state 169
    BLOCK_ITEM_LIST_OPT        go to state 170
    EXPRESSION_OPT             go to state 171


State 95

  182 FUNCTION_DEFINITION: DECLARATION_SPECIFIERS DECLARATOR DECLARATION_LIST_OPT COMPOUND_STATEMENT •

    $default  reduce using rule 182 (FUNCTION_DEFINITION)


State 96

  110 DIRECT_DECLARATOR: LEFT_PARANTHESIS DECLARATOR • RIGHT_PARANTHESIS

    RIGHT_PARANTHESIS  shift, and go to state 172


State 97

  111 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET • TYPE_QUALIFIER_LIST_OPT ASSIGNMENT_EXPRESSION_OPT RIGHT_SQUARE_BRACKET
  112                  | DIRECT_DECLARATOR LEFT_SQUARE_BRACKET • STATIC TYPE_QUALIFIER_LIST_OPT ASSIGNMENT_EXPRESSION RIGHT_SQUARE_BRACKET
  113                  | DIRECT_DECLARATOR LEFT_SQUARE_BRACKET • TYPE_QUALIFIER_LIST STATIC ASSIGNMENT_EXPRESSION RIGHT_SQUARE_BRACKET
  114                  | DIRECT_DECLARATOR LEFT_SQUARE_BRACKET • TYPE_QUALIFIER_LIST_OPT MULTIPLICATION_OPERATOR RIGHT_SQUARE_BRACKET

    RESTRICT  shift, and go to state 2
    VOLATILE  shift, and go to state 8
    CONST     shift, and go to state 11
    STATIC    shift, and go to state 173

    $default  reduce using rule 124 (TYPE_QUALIFIER_LIST_OPT)

    TYPE_QUALIFIER           go to state 44
    TYPE_QUALIFIER_LIST      go to state 174
    TYPE_QUALIFIER_LIST_OPT  go to state 175


State 98

  115 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_PARANTHESIS • PARAMETER_TYPE_LIST RIGHT_PARANTHESIS
  116                  | DIRECT_DECLARATOR LEFT_PARANTHESIS • IDENTIFIER_LIST_OPT RIGHT_PARANTHESIS

    AUTO        shift, and go to state 1
    RESTRICT    shift, and go to state 2
    UNSIGNED    shift, and go to state 3
    EXTERN      shift, and go to state 4
    VOID        shift, and go to state 5
    FLOAT       shift, and go to state 6
    SHORT       shift, and go to state 7
    VOLATILE    shift, and go to state 8
    CHAR        shift, and go to state 9
    SIGNED      shift, and go to state 10
    CONST       shift, and go to state 11
    BOOL        shift, and go to state 12
    STATIC      shift, and go to state 13
    COMPLEX     shift, and go to state 14
    INLINE      shift, and go to state 15
    IMAGINARY   shift, and go to state 16
    INT         shift, and go to state 17
    DOUBLE      shift, and go to state 18
    LONG        shift, and go to state 19
    REGISTER    shift, and go to state 20
    IDENTIFIER  shift, and go to state 176

    $default  reduce using rule 134 (IDENTIFIER_LIST_OPT)

    DECLARATION_SPECIFIERS   go to state 177
    STORAGE_CLASS_SPECIFIER  go to state 23
    TYPE_SPECIFIER           go to state 24
    TYPE_QUALIFIER           go to state 25
    FUNCTION_SPECIFIER       go to state 26
    PARAMETER_TYPE_LIST      go to state 178
    PARAMETER_LIST           go to state 179
    PARAMETER_DECLARATION    go to state 180
    IDENTIFIER_LIST          go to state 181
    IDENTIFIER_LIST_OPT      go to state 182


State 99

    4 PRIMARY_EXPRESSION: LEFT_PARANTHESIS • EXPRESSION RIGHT_PARANTHESIS
   12 POSTFIX_EXPRESSION: LEFT_PARANTHESIS • TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET
   13                   | LEFT_PARANTHESIS • TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET
   23 UNARY_EXPRESSION: SIZEOF LEFT_PARANTHESIS • TYPE_NAME RIGHT_PARANTHESIS

    RESTRICT                 shift, and go to state 2
    UNSIGNED                 shift, and go to state 3
    VOID                     shift, and go to state 5
    FLOAT                    shift, and go to state 6
    SHORT                    shift, and go to state 7
    VOLATILE                 shift, and go to state 8
    CHAR                     shift, and go to state 9
    SIGNED                   shift, and go to state 10
    CONST                    shift, and go to state 11
    SIZEOF                   shift, and go to state 61
    BOOL                     shift, and go to state 12
    COMPLEX                  shift, and go to state 14
    IMAGINARY                shift, and go to state 16
    INT                      shift, and go to state 17
    DOUBLE                   shift, and go to state 18
    LONG                     shift, and go to state 19
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 102
    TYPE_SPECIFIER             go to state 103
    SPECIFIER_QUALIFIER_LIST   go to state 104
    TYPE_QUALIFIER             go to state 105
    TYPE_NAME                  go to state 183


State 100

   22 UNARY_EXPRESSION: SIZEOF UNARY_EXPRESSION •

    $default  reduce using rule 22 (UNARY_EXPRESSION)


State 101

   66 EXPRESSION: ASSIGNMENT_EXPRESSION •

    $default  reduce using rule 66 (EXPRESSION)


State 102

    4 PRIMARY_EXPRESSION: LEFT_PARANTHESIS EXPRESSION • RIGHT_PARANTHESIS
   67 EXPRESSION: EXPRESSION • COMMA ASSIGNMENT_EXPRESSION

    RIGHT_PARANTHESIS  shift, and go to state 184
    COMMA              shift, and go to state 185


State 103

   98 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER • SPECIFIER_QUALIFIER_LIST_OPT

    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    COMPLEX    shift, and go to state 14
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19

    $default  reduce using rule 101 (SPECIFIER_QUALIFIER_LIST_OPT)

    TYPE_SPECIFIER                go to state 103
    SPECIFIER_QUALIFIER_LIST      go to state 186
    SPECIFIER_QUALIFIER_LIST_OPT  go to state 187
    TYPE_QUALIFIER                go to state 105


State 104

  135 TYPE_NAME: SPECIFIER_QUALIFIER_LIST •

    $default  reduce using rule 135 (TYPE_NAME)


State 105

   99 SPECIFIER_QUALIFIER_LIST: TYPE_QUALIFIER • SPECIFIER_QUALIFIER_LIST_OPT

    RESTRICT   shift, and go to state 2
    UNSIGNED   shift, and go to state 3
    VOID       shift, and go to state 5
    FLOAT      shift, and go to state 6
    SHORT      shift, and go to state 7
    VOLATILE   shift, and go to state 8
    CHAR       shift, and go to state 9
    SIGNED     shift, and go to state 10
    CONST      shift, and go to state 11
    BOOL       shift, and go to state 12
    COMPLEX    shift, and go to state 14
    IMAGINARY  shift, and go to state 16
    INT        shift, and go to state 17
    DOUBLE     shift, and go to state 18
    LONG       shift, and go to state 19

    $default  reduce using rule 101 (SPECIFIER_QUALIFIER_LIST_OPT)

    TYPE_SPECIFIER                go to state 103
    SPECIFIER_QUALIFIER_LIST      go to state 186
    SPECIFIER_QUALIFIER_LIST_OPT  go to state 188
    TYPE_QUALIFIER                go to state 105


State 106

   12 POSTFIX_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME • RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET
   13                   | LEFT_PARANTHESIS TYPE_NAME • RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET
   31 CAST_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME • RIGHT_PARANTHESIS CAST_EXPRESSION

    RIGHT_PARANTHESIS  shift, and go to state 189


State 107

  146 DESIGNATOR: LEFT_SQUARE_BRACKET • CONSTANT_EXPRESSION RIGHT_SQUARE_BRACKET

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 190
    CONSTANT_EXPRESSION        go to state 191


State 108

  147 DESIGNATOR: DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 192


State 109

  137 INITIALIZER: LEFT_CURLY_BRACKET INITIALIZER_LIST • RIGHT_CURLY_BRACKET
  138            | LEFT_CURLY_BRACKET INITIALIZER_LIST • COMMA RIGHT_CURLY_BRACKET
  140 INITIALIZER_LIST: INITIALIZER_LIST • COMMA DESIGNATION_OPT INITIALIZER

    RIGHT_CURLY_BRACKET  shift, and go to state 193
    COMMA                shift, and go to state 194


State 110

  139 INITIALIZER_LIST: DESIGNATION_OPT • INITIALIZER

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 66
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 91
    INITIALIZER                go to state 195


State 111

  141 DESIGNATION_OPT: DESIGNATION •

    $default  reduce using rule 141 (DESIGNATION_OPT)


State 112

  143 DESIGNATION: DESIGNATOR_LIST • EQUAL_OPERATOR
  145 DESIGNATOR_LIST: DESIGNATOR_LIST • DESIGNATOR

    LEFT_SQUARE_BRACKET  shift, and go to state 107
    DOT                  shift, and go to state 108
    EQUAL_OPERATOR       shift, and go to state 196

    DESIGNATOR  go to state 197


State 113

  144 DESIGNATOR_LIST: DESIGNATOR •

    $default  reduce using rule 144 (DESIGNATOR_LIST)


State 114

    4 PRIMARY_EXPRESSION: LEFT_PARANTHESIS • EXPRESSION RIGHT_PARANTHESIS
   12 POSTFIX_EXPRESSION: LEFT_PARANTHESIS • TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET
   13                   | LEFT_PARANTHESIS • TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET

    RESTRICT                 shift, and go to state 2
    UNSIGNED                 shift, and go to state 3
    VOID                     shift, and go to state 5
    FLOAT                    shift, and go to state 6
    SHORT                    shift, and go to state 7
    VOLATILE                 shift, and go to state 8
    CHAR                     shift, and go to state 9
    SIGNED                   shift, and go to state 10
    CONST                    shift, and go to state 11
    SIZEOF                   shift, and go to state 61
    BOOL                     shift, and go to state 12
    COMPLEX                  shift, and go to state 14
    IMAGINARY                shift, and go to state 16
    INT                      shift, and go to state 17
    DOUBLE                   shift, and go to state 18
    LONG                     shift, and go to state 19
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 102
    TYPE_SPECIFIER             go to state 103
    SPECIFIER_QUALIFIER_LIST   go to state 104
    TYPE_QUALIFIER             go to state 105
    TYPE_NAME                  go to state 198


State 115

   19 UNARY_EXPRESSION: INCREMENT_OPERATOR UNARY_EXPRESSION •

    $default  reduce using rule 19 (UNARY_EXPRESSION)


State 116

   20 UNARY_EXPRESSION: DECREMENT_OPERATOR UNARY_EXPRESSION •

    $default  reduce using rule 20 (UNARY_EXPRESSION)


State 117

    6 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION LEFT_SQUARE_BRACKET • EXPRESSION RIGHT_SQUARE_BRACKET

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 199


State 118

    7 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION LEFT_PARANTHESIS • ARGUMENT_EXPRESSION_LIST_OPT RIGHT_PARANTHESIS

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 17 (ARGUMENT_EXPRESSION_LIST_OPT)

    PRIMARY_EXPRESSION            go to state 75
    POSTFIX_EXPRESSION            go to state 76
    ARGUMENT_EXPRESSION_LIST      go to state 200
    ARGUMENT_EXPRESSION_LIST_OPT  go to state 201
    UNARY_EXPRESSION              go to state 77
    UNARY_OPEARATOR               go to state 78
    CAST_EXPRESSION               go to state 79
    MULTIPLICATIVE_EXPRESSION     go to state 80
    ADDITIVE_EXPRESSION           go to state 81
    SHIFT_EXPRESSION              go to state 82
    RELATIONAL_EXPRESSION         go to state 83
    EQUALITY_EXPRESSION           go to state 84
    AND_EXPRESSION                go to state 85
    EXCLUSIVE_OR_EXPRESSION       go to state 86
    INCLUSIVE_OR_EXPRESSION       go to state 87
    LOGICAL_AND_EXPRESSION        go to state 88
    LOGICAL_OR_EXPRESSION         go to state 89
    CONDITIONAL_EXPRESSION        go to state 90
    ASSIGNMENT_EXPRESSION         go to state 202


State 119

    8 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION DOT • IDENTIFIER

    IDENTIFIER  shift, and go to state 203


State 120

    9 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION POINTER_ACCESS • IDENTIFIER

    IDENTIFIER  shift, and go to state 204


State 121

   10 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION INCREMENT_OPERATOR •

    $default  reduce using rule 10 (POSTFIX_EXPRESSION)


State 122

   11 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION DECREMENT_OPERATOR •

    $default  reduce using rule 11 (POSTFIX_EXPRESSION)


State 123

   64 ASSIGNMENT_OPERATOR: EQUAL_OPERATOR •

    $default  reduce using rule 64 (ASSIGNMENT_OPERATOR)


State 124

   65 ASSIGNMENT_OPERATOR: ASSIGNMENT_OPERATORS •

    $default  reduce using rule 65 (ASSIGNMENT_OPERATOR)


State 125

   63 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR • ASSIGNMENT_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 205


State 126

   30 CAST_EXPRESSION: UNARY_EXPRESSION •

    $default  reduce using rule 30 (CAST_EXPRESSION)


State 127

   21 UNARY_EXPRESSION: UNARY_OPEARATOR CAST_EXPRESSION •

    $default  reduce using rule 21 (UNARY_EXPRESSION)


State 128

   34 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION DIVIDE_OPERATOR • CAST_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION  go to state 75
    POSTFIX_EXPRESSION  go to state 76
    UNARY_EXPRESSION    go to state 126
    UNARY_OPEARATOR     go to state 78
    CAST_EXPRESSION     go to state 206


State 129

   35 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION REMAINDER_OPERATOR • CAST_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION  go to state 75
    POSTFIX_EXPRESSION  go to state 76
    UNARY_EXPRESSION    go to state 126
    UNARY_OPEARATOR     go to state 78
    CAST_EXPRESSION     go to state 207


State 130

   33 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MULTIPLICATION_OPERATOR • CAST_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION  go to state 75
    POSTFIX_EXPRESSION  go to state 76
    UNARY_EXPRESSION    go to state 126
    UNARY_OPEARATOR     go to state 78
    CAST_EXPRESSION     go to state 208


State 131

   37 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION ADDITION_OPERATOR • MULTIPLICATIVE_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 209


State 132

   38 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION SUBTRACTION_OPERATOR • MULTIPLICATIVE_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 210


State 133

   40 SHIFT_EXPRESSION: SHIFT_EXPRESSION SHIFT_LEFT_OPERATOR • ADDITIVE_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 211


State 134

   41 SHIFT_EXPRESSION: SHIFT_EXPRESSION SHIFT_RIGHT_OPERATOR • ADDITIVE_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 212


State 135

   43 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LESS_THAN • SHIFT_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 213


State 136

   45 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LESS_THAN_EQUAL_TO • SHIFT_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 214


State 137

   44 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GREATER_THAN • SHIFT_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 215


State 138

   46 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GREATER_THAN_EQUAL_TO • SHIFT_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 216


State 139

   48 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION EQUALITY_OPERATOR • RELATIONAL_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 217


State 140

   49 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION NON_EQUALITY_OPERATOR • RELATIONAL_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 218


State 141

   51 AND_EXPRESSION: AND_EXPRESSION BITWISE_AND_OPERATOR • EQUALITY_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 219


State 142

   53 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION XOR_OPERATOR • AND_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 220


State 143

   55 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION BITWISE_OR_OPERATOR • EXCLUSIVE_OR_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 221


State 144

   57 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION LOGICAL_AND_OPERATOR • INCLUSIVE_OR_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 222


State 145

   59 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION LOGICAL_OR_OPERATOR • LOGICAL_AND_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 223


State 146

   61 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION TERNARY_OPERATOR • EXPRESSION TERNARY_SEPERATOR CONDITIONAL_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 224


State 147

  172 JUMP_STATEMENT: BREAK • SEMI_COLON

    SEMI_COLON  shift, and go to state 225


State 148

  173 JUMP_STATEMENT: RETURN • EXPRESSION_OPT SEMI_COLON

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    EXPRESSION_OPT             go to state 226


State 149

  155 LABELED_STATEMENT: CASE • CONSTANT_EXPRESSION TERNARY_SEPERATOR STATEMENT

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 190
    CONSTANT_EXPRESSION        go to state 227


State 150

  168 ITERATION_STATEMENT: FOR • LEFT_PARANTHESIS EXPRESSION_OPT SEMI_COLON EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT
  169                    | FOR • LEFT_PARANTHESIS DECLARATION EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT

    LEFT_PARANTHESIS  shift, and go to state 228


State 151

  166 ITERATION_STATEMENT: WHILE • LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT

    LEFT_PARANTHESIS  shift, and go to state 229


State 152

  170 JUMP_STATEMENT: GOTO • IDENTIFIER SEMI_COLON

    IDENTIFIER  shift, and go to state 230


State 153

  171 JUMP_STATEMENT: CONTINUE • SEMI_COLON

    SEMI_COLON  shift, and go to state 231


State 154

  163 SELECTION_STATEMENT: IF • LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT
  164                    | IF • LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT ELSE STATEMENT

    LEFT_PARANTHESIS  shift, and go to state 232


State 155

  156 LABELED_STATEMENT: DEFAULT • TERNARY_SEPERATOR STATEMENT

    TERNARY_SEPERATOR  shift, and go to state 233


State 156

  167 ITERATION_STATEMENT: DO • STATEMENT WHILE LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS SEMI_COLON

    BREAK                    shift, and go to state 147
    RETURN                   shift, and go to state 148
    CASE                     shift, and go to state 149
    FOR                      shift, and go to state 150
    WHILE                    shift, and go to state 151
    GOTO                     shift, and go to state 152
    SIZEOF                   shift, and go to state 61
    CONTINUE                 shift, and go to state 153
    IF                       shift, and go to state 154
    DEFAULT                  shift, and go to state 155
    DO                       shift, and go to state 156
    SWITCH                   shift, and go to state 157
    IDENTIFIER               shift, and go to state 158
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 94
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    STATEMENT                  go to state 234
    LABELED_STATEMENT          go to state 162
    COMPOUND_STATEMENT         go to state 163
    EXPRESSION_STATEMENT       go to state 166
    SELECTION_STATEMENT        go to state 167
    ITERATION_STATEMENT        go to state 168
    JUMP_STATEMENT             go to state 169
    EXPRESSION_OPT             go to state 171


State 157

  165 SELECTION_STATEMENT: SWITCH • LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT

    LEFT_PARANTHESIS  shift, and go to state 235


State 158

    1 PRIMARY_EXPRESSION: IDENTIFIER •
  154 LABELED_STATEMENT: IDENTIFIER • TERNARY_SEPERATOR STATEMENT

    TERNARY_SEPERATOR  shift, and go to state 236

    $default  reduce using rule 1 (PRIMARY_EXPRESSION)


State 159

   67 EXPRESSION: EXPRESSION • COMMA ASSIGNMENT_EXPRESSION
  176 EXPRESSION_OPT: EXPRESSION •

    COMMA  shift, and go to state 185

    $default  reduce using rule 176 (EXPRESSION_OPT)


State 160

  160 BLOCK_ITEM: DECLARATION •

    $default  reduce using rule 160 (BLOCK_ITEM)


State 161

  161 BLOCK_ITEM: STATEMENT •

    $default  reduce using rule 161 (BLOCK_ITEM)


State 162

  148 STATEMENT: LABELED_STATEMENT •

    $default  reduce using rule 148 (STATEMENT)


State 163

  149 STATEMENT: COMPOUND_STATEMENT •

    $default  reduce using rule 149 (STATEMENT)


State 164

  159 BLOCK_ITEM_LIST: BLOCK_ITEM_LIST • BLOCK_ITEM
  174 BLOCK_ITEM_LIST_OPT: BLOCK_ITEM_LIST •

    AUTO                     shift, and go to state 1
    RESTRICT                 shift, and go to state 2
    UNSIGNED                 shift, and go to state 3
    BREAK                    shift, and go to state 147
    EXTERN                   shift, and go to state 4
    RETURN                   shift, and go to state 148
    VOID                     shift, and go to state 5
    CASE                     shift, and go to state 149
    FLOAT                    shift, and go to state 6
    SHORT                    shift, and go to state 7
    VOLATILE                 shift, and go to state 8
    CHAR                     shift, and go to state 9
    FOR                      shift, and go to state 150
    SIGNED                   shift, and go to state 10
    WHILE                    shift, and go to state 151
    CONST                    shift, and go to state 11
    GOTO                     shift, and go to state 152
    SIZEOF                   shift, and go to state 61
    BOOL                     shift, and go to state 12
    CONTINUE                 shift, and go to state 153
    IF                       shift, and go to state 154
    STATIC                   shift, and go to state 13
    COMPLEX                  shift, and go to state 14
    DEFAULT                  shift, and go to state 155
    INLINE                   shift, and go to state 15
    IMAGINARY                shift, and go to state 16
    DO                       shift, and go to state 156
    INT                      shift, and go to state 17
    SWITCH                   shift, and go to state 157
    DOUBLE                   shift, and go to state 18
    LONG                     shift, and go to state 19
    REGISTER                 shift, and go to state 20
    IDENTIFIER               shift, and go to state 158
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 94
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    SEMI_COLON  reduce using rule 177 (EXPRESSION_OPT)
    $default    reduce using rule 174 (BLOCK_ITEM_LIST_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    DECLARATION                go to state 160
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIER    go to state 23
    TYPE_SPECIFIER             go to state 24
    TYPE_QUALIFIER             go to state 25
    FUNCTION_SPECIFIER         go to state 26
    STATEMENT                  go to state 161
    LABELED_STATEMENT          go to state 162
    COMPOUND_STATEMENT         go to state 163
    BLOCK_ITEM                 go to state 237
    EXPRESSION_STATEMENT       go to state 166
    SELECTION_STATEMENT        go to state 167
    ITERATION_STATEMENT        go to state 168
    JUMP_STATEMENT             go to state 169
    EXPRESSION_OPT             go to state 171


State 165

  158 BLOCK_ITEM_LIST: BLOCK_ITEM •

    $default  reduce using rule 158 (BLOCK_ITEM_LIST)


State 166

  150 STATEMENT: EXPRESSION_STATEMENT •

    $default  reduce using rule 150 (STATEMENT)


State 167

  151 STATEMENT: SELECTION_STATEMENT •

    $default  reduce using rule 151 (STATEMENT)


State 168

  152 STATEMENT: ITERATION_STATEMENT •

    $default  reduce using rule 152 (STATEMENT)


State 169

  153 STATEMENT: JUMP_STATEMENT •

    $default  reduce using rule 153 (STATEMENT)


State 170

  157 COMPOUND_STATEMENT: LEFT_CURLY_BRACKET BLOCK_ITEM_LIST_OPT • RIGHT_CURLY_BRACKET

    RIGHT_CURLY_BRACKET  shift, and go to state 238


State 171

  162 EXPRESSION_STATEMENT: EXPRESSION_OPT • SEMI_COLON

    SEMI_COLON  shift, and go to state 239


State 172

  110 DIRECT_DECLARATOR: LEFT_PARANTHESIS DECLARATOR RIGHT_PARANTHESIS •

    $default  reduce using rule 110 (DIRECT_DECLARATOR)


State 173

  112 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET STATIC • TYPE_QUALIFIER_LIST_OPT ASSIGNMENT_EXPRESSION RIGHT_SQUARE_BRACKET

    RESTRICT  shift, and go to state 2
    VOLATILE  shift, and go to state 8
    CONST     shift, and go to state 11

    $default  reduce using rule 124 (TYPE_QUALIFIER_LIST_OPT)

    TYPE_QUALIFIER           go to state 44
    TYPE_QUALIFIER_LIST      go to state 45
    TYPE_QUALIFIER_LIST_OPT  go to state 240


State 174

  113 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST • STATIC ASSIGNMENT_EXPRESSION RIGHT_SQUARE_BRACKET
  122 TYPE_QUALIFIER_LIST: TYPE_QUALIFIER_LIST • TYPE_QUALIFIER
  123 TYPE_QUALIFIER_LIST_OPT: TYPE_QUALIFIER_LIST •

    RESTRICT  shift, and go to state 2
    VOLATILE  shift, and go to state 8
    CONST     shift, and go to state 11
    STATIC    shift, and go to state 241

    $default  reduce using rule 123 (TYPE_QUALIFIER_LIST_OPT)

    TYPE_QUALIFIER  go to state 57


State 175

  111 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST_OPT • ASSIGNMENT_EXPRESSION_OPT RIGHT_SQUARE_BRACKET
  114                  | DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST_OPT • MULTIPLICATION_OPERATOR RIGHT_SQUARE_BRACKET

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 242
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 118 (ASSIGNMENT_EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 243
    ASSIGNMENT_EXPRESSION_OPT  go to state 244


State 176

  131 IDENTIFIER_LIST: IDENTIFIER •

    $default  reduce using rule 131 (IDENTIFIER_LIST)


State 177

  129 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS • DECLARATOR
  130                      | DECLARATION_SPECIFIERS •

    MULTIPLICATION_OPERATOR  shift, and go to state 30

    RIGHT_PARANTHESIS  reduce using rule 130 (PARAMETER_DECLARATION)
    COMMA              reduce using rule 130 (PARAMETER_DECLARATION)
    $default           reduce using rule 108 (POINTER_OPT)

    DECLARATOR   go to state 245
    POINTER_OPT  go to state 35
    POINTER      go to state 36


State 178

  115 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_PARANTHESIS PARAMETER_TYPE_LIST • RIGHT_PARANTHESIS

    RIGHT_PARANTHESIS  shift, and go to state 246


State 179

  125 PARAMETER_TYPE_LIST: PARAMETER_LIST •
  126                    | PARAMETER_LIST • COMMA TRIPLE_DOT
  128 PARAMETER_LIST: PARAMETER_LIST • COMMA PARAMETER_DECLARATION

    COMMA  shift, and go to state 247

    $default  reduce using rule 125 (PARAMETER_TYPE_LIST)


State 180

  127 PARAMETER_LIST: PARAMETER_DECLARATION •

    $default  reduce using rule 127 (PARAMETER_LIST)


State 181

  132 IDENTIFIER_LIST: IDENTIFIER_LIST • COMMA IDENTIFIER
  133 IDENTIFIER_LIST_OPT: IDENTIFIER_LIST •

    COMMA  shift, and go to state 248

    $default  reduce using rule 133 (IDENTIFIER_LIST_OPT)


State 182

  116 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_PARANTHESIS IDENTIFIER_LIST_OPT • RIGHT_PARANTHESIS

    RIGHT_PARANTHESIS  shift, and go to state 249


State 183

   12 POSTFIX_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME • RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET
   13                   | LEFT_PARANTHESIS TYPE_NAME • RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET
   23 UNARY_EXPRESSION: SIZEOF LEFT_PARANTHESIS TYPE_NAME • RIGHT_PARANTHESIS

    RIGHT_PARANTHESIS  shift, and go to state 250


State 184

    4 PRIMARY_EXPRESSION: LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS •

    $default  reduce using rule 4 (PRIMARY_EXPRESSION)


State 185

   67 EXPRESSION: EXPRESSION COMMA • ASSIGNMENT_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 251


State 186

  100 SPECIFIER_QUALIFIER_LIST_OPT: SPECIFIER_QUALIFIER_LIST •

    $default  reduce using rule 100 (SPECIFIER_QUALIFIER_LIST_OPT)


State 187

   98 SPECIFIER_QUALIFIER_LIST: TYPE_SPECIFIER SPECIFIER_QUALIFIER_LIST_OPT •

    $default  reduce using rule 98 (SPECIFIER_QUALIFIER_LIST)


State 188

   99 SPECIFIER_QUALIFIER_LIST: TYPE_QUALIFIER SPECIFIER_QUALIFIER_LIST_OPT •

    $default  reduce using rule 99 (SPECIFIER_QUALIFIER_LIST)


State 189

   12 POSTFIX_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS • LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET
   13                   | LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS • LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET
   31 CAST_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS • CAST_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 252
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION  go to state 75
    POSTFIX_EXPRESSION  go to state 76
    UNARY_EXPRESSION    go to state 126
    UNARY_OPEARATOR     go to state 78
    CAST_EXPRESSION     go to state 253


State 190

   68 CONSTANT_EXPRESSION: CONDITIONAL_EXPRESSION •

    $default  reduce using rule 68 (CONSTANT_EXPRESSION)


State 191

  146 DESIGNATOR: LEFT_SQUARE_BRACKET CONSTANT_EXPRESSION • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 254


State 192

  147 DESIGNATOR: DOT IDENTIFIER •

    $default  reduce using rule 147 (DESIGNATOR)


State 193

  137 INITIALIZER: LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET •

    $default  reduce using rule 137 (INITIALIZER)


State 194

  138 INITIALIZER: LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA • RIGHT_CURLY_BRACKET
  140 INITIALIZER_LIST: INITIALIZER_LIST COMMA • DESIGNATION_OPT INITIALIZER

    LEFT_SQUARE_BRACKET  shift, and go to state 107
    RIGHT_CURLY_BRACKET  shift, and go to state 255
    DOT                  shift, and go to state 108

    $default  reduce using rule 142 (DESIGNATION_OPT)

    DESIGNATION_OPT  go to state 256
    DESIGNATION      go to state 111
    DESIGNATOR_LIST  go to state 112
    DESIGNATOR       go to state 113


State 195

  139 INITIALIZER_LIST: DESIGNATION_OPT INITIALIZER •

    $default  reduce using rule 139 (INITIALIZER_LIST)


State 196

  143 DESIGNATION: DESIGNATOR_LIST EQUAL_OPERATOR •

    $default  reduce using rule 143 (DESIGNATION)


State 197

  145 DESIGNATOR_LIST: DESIGNATOR_LIST DESIGNATOR •

    $default  reduce using rule 145 (DESIGNATOR_LIST)


State 198

   12 POSTFIX_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME • RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET
   13                   | LEFT_PARANTHESIS TYPE_NAME • RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET

    RIGHT_PARANTHESIS  shift, and go to state 257


State 199

    6 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION LEFT_SQUARE_BRACKET EXPRESSION • RIGHT_SQUARE_BRACKET
   67 EXPRESSION: EXPRESSION • COMMA ASSIGNMENT_EXPRESSION

    RIGHT_SQUARE_BRACKET  shift, and go to state 258
    COMMA                 shift, and go to state 185


State 200

   15 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST • COMMA ASSIGNMENT_EXPRESSION
   16 ARGUMENT_EXPRESSION_LIST_OPT: ARGUMENT_EXPRESSION_LIST •

    COMMA  shift, and go to state 259

    $default  reduce using rule 16 (ARGUMENT_EXPRESSION_LIST_OPT)


State 201

    7 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION LEFT_PARANTHESIS ARGUMENT_EXPRESSION_LIST_OPT • RIGHT_PARANTHESIS

    RIGHT_PARANTHESIS  shift, and go to state 260


State 202

   14 ARGUMENT_EXPRESSION_LIST: ASSIGNMENT_EXPRESSION •

    $default  reduce using rule 14 (ARGUMENT_EXPRESSION_LIST)


State 203

    8 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION DOT IDENTIFIER •

    $default  reduce using rule 8 (POSTFIX_EXPRESSION)


State 204

    9 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION POINTER_ACCESS IDENTIFIER •

    $default  reduce using rule 9 (POSTFIX_EXPRESSION)


State 205

   63 ASSIGNMENT_EXPRESSION: UNARY_EXPRESSION ASSIGNMENT_OPERATOR ASSIGNMENT_EXPRESSION •

    $default  reduce using rule 63 (ASSIGNMENT_EXPRESSION)


State 206

   34 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION DIVIDE_OPERATOR CAST_EXPRESSION •

    $default  reduce using rule 34 (MULTIPLICATIVE_EXPRESSION)


State 207

   35 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION REMAINDER_OPERATOR CAST_EXPRESSION •

    $default  reduce using rule 35 (MULTIPLICATIVE_EXPRESSION)


State 208

   33 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION MULTIPLICATION_OPERATOR CAST_EXPRESSION •

    $default  reduce using rule 33 (MULTIPLICATIVE_EXPRESSION)


State 209

   33 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION • MULTIPLICATION_OPERATOR CAST_EXPRESSION
   34                          | MULTIPLICATIVE_EXPRESSION • DIVIDE_OPERATOR CAST_EXPRESSION
   35                          | MULTIPLICATIVE_EXPRESSION • REMAINDER_OPERATOR CAST_EXPRESSION
   37 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION ADDITION_OPERATOR MULTIPLICATIVE_EXPRESSION •

    DIVIDE_OPERATOR          shift, and go to state 128
    REMAINDER_OPERATOR       shift, and go to state 129
    MULTIPLICATION_OPERATOR  shift, and go to state 130

    $default  reduce using rule 37 (ADDITIVE_EXPRESSION)


State 210

   33 MULTIPLICATIVE_EXPRESSION: MULTIPLICATIVE_EXPRESSION • MULTIPLICATION_OPERATOR CAST_EXPRESSION
   34                          | MULTIPLICATIVE_EXPRESSION • DIVIDE_OPERATOR CAST_EXPRESSION
   35                          | MULTIPLICATIVE_EXPRESSION • REMAINDER_OPERATOR CAST_EXPRESSION
   38 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION SUBTRACTION_OPERATOR MULTIPLICATIVE_EXPRESSION •

    DIVIDE_OPERATOR          shift, and go to state 128
    REMAINDER_OPERATOR       shift, and go to state 129
    MULTIPLICATION_OPERATOR  shift, and go to state 130

    $default  reduce using rule 38 (ADDITIVE_EXPRESSION)


State 211

   37 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION • ADDITION_OPERATOR MULTIPLICATIVE_EXPRESSION
   38                    | ADDITIVE_EXPRESSION • SUBTRACTION_OPERATOR MULTIPLICATIVE_EXPRESSION
   40 SHIFT_EXPRESSION: SHIFT_EXPRESSION SHIFT_LEFT_OPERATOR ADDITIVE_EXPRESSION •

    ADDITION_OPERATOR     shift, and go to state 131
    SUBTRACTION_OPERATOR  shift, and go to state 132

    $default  reduce using rule 40 (SHIFT_EXPRESSION)


State 212

   37 ADDITIVE_EXPRESSION: ADDITIVE_EXPRESSION • ADDITION_OPERATOR MULTIPLICATIVE_EXPRESSION
   38                    | ADDITIVE_EXPRESSION • SUBTRACTION_OPERATOR MULTIPLICATIVE_EXPRESSION
   41 SHIFT_EXPRESSION: SHIFT_EXPRESSION SHIFT_RIGHT_OPERATOR ADDITIVE_EXPRESSION •

    ADDITION_OPERATOR     shift, and go to state 131
    SUBTRACTION_OPERATOR  shift, and go to state 132

    $default  reduce using rule 41 (SHIFT_EXPRESSION)


State 213

   40 SHIFT_EXPRESSION: SHIFT_EXPRESSION • SHIFT_LEFT_OPERATOR ADDITIVE_EXPRESSION
   41                 | SHIFT_EXPRESSION • SHIFT_RIGHT_OPERATOR ADDITIVE_EXPRESSION
   43 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LESS_THAN SHIFT_EXPRESSION •

    SHIFT_LEFT_OPERATOR   shift, and go to state 133
    SHIFT_RIGHT_OPERATOR  shift, and go to state 134

    $default  reduce using rule 43 (RELATIONAL_EXPRESSION)


State 214

   40 SHIFT_EXPRESSION: SHIFT_EXPRESSION • SHIFT_LEFT_OPERATOR ADDITIVE_EXPRESSION
   41                 | SHIFT_EXPRESSION • SHIFT_RIGHT_OPERATOR ADDITIVE_EXPRESSION
   45 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION LESS_THAN_EQUAL_TO SHIFT_EXPRESSION •

    SHIFT_LEFT_OPERATOR   shift, and go to state 133
    SHIFT_RIGHT_OPERATOR  shift, and go to state 134

    $default  reduce using rule 45 (RELATIONAL_EXPRESSION)


State 215

   40 SHIFT_EXPRESSION: SHIFT_EXPRESSION • SHIFT_LEFT_OPERATOR ADDITIVE_EXPRESSION
   41                 | SHIFT_EXPRESSION • SHIFT_RIGHT_OPERATOR ADDITIVE_EXPRESSION
   44 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GREATER_THAN SHIFT_EXPRESSION •

    SHIFT_LEFT_OPERATOR   shift, and go to state 133
    SHIFT_RIGHT_OPERATOR  shift, and go to state 134

    $default  reduce using rule 44 (RELATIONAL_EXPRESSION)


State 216

   40 SHIFT_EXPRESSION: SHIFT_EXPRESSION • SHIFT_LEFT_OPERATOR ADDITIVE_EXPRESSION
   41                 | SHIFT_EXPRESSION • SHIFT_RIGHT_OPERATOR ADDITIVE_EXPRESSION
   46 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION GREATER_THAN_EQUAL_TO SHIFT_EXPRESSION •

    SHIFT_LEFT_OPERATOR   shift, and go to state 133
    SHIFT_RIGHT_OPERATOR  shift, and go to state 134

    $default  reduce using rule 46 (RELATIONAL_EXPRESSION)


State 217

   43 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION • LESS_THAN SHIFT_EXPRESSION
   44                      | RELATIONAL_EXPRESSION • GREATER_THAN SHIFT_EXPRESSION
   45                      | RELATIONAL_EXPRESSION • LESS_THAN_EQUAL_TO SHIFT_EXPRESSION
   46                      | RELATIONAL_EXPRESSION • GREATER_THAN_EQUAL_TO SHIFT_EXPRESSION
   48 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION EQUALITY_OPERATOR RELATIONAL_EXPRESSION •

    LESS_THAN              shift, and go to state 135
    LESS_THAN_EQUAL_TO     shift, and go to state 136
    GREATER_THAN           shift, and go to state 137
    GREATER_THAN_EQUAL_TO  shift, and go to state 138

    $default  reduce using rule 48 (EQUALITY_EXPRESSION)


State 218

   43 RELATIONAL_EXPRESSION: RELATIONAL_EXPRESSION • LESS_THAN SHIFT_EXPRESSION
   44                      | RELATIONAL_EXPRESSION • GREATER_THAN SHIFT_EXPRESSION
   45                      | RELATIONAL_EXPRESSION • LESS_THAN_EQUAL_TO SHIFT_EXPRESSION
   46                      | RELATIONAL_EXPRESSION • GREATER_THAN_EQUAL_TO SHIFT_EXPRESSION
   49 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION NON_EQUALITY_OPERATOR RELATIONAL_EXPRESSION •

    LESS_THAN              shift, and go to state 135
    LESS_THAN_EQUAL_TO     shift, and go to state 136
    GREATER_THAN           shift, and go to state 137
    GREATER_THAN_EQUAL_TO  shift, and go to state 138

    $default  reduce using rule 49 (EQUALITY_EXPRESSION)


State 219

   48 EQUALITY_EXPRESSION: EQUALITY_EXPRESSION • EQUALITY_OPERATOR RELATIONAL_EXPRESSION
   49                    | EQUALITY_EXPRESSION • NON_EQUALITY_OPERATOR RELATIONAL_EXPRESSION
   51 AND_EXPRESSION: AND_EXPRESSION BITWISE_AND_OPERATOR EQUALITY_EXPRESSION •

    EQUALITY_OPERATOR      shift, and go to state 139
    NON_EQUALITY_OPERATOR  shift, and go to state 140

    $default  reduce using rule 51 (AND_EXPRESSION)


State 220

   51 AND_EXPRESSION: AND_EXPRESSION • BITWISE_AND_OPERATOR EQUALITY_EXPRESSION
   53 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION XOR_OPERATOR AND_EXPRESSION •

    BITWISE_AND_OPERATOR  shift, and go to state 141

    $default  reduce using rule 53 (EXCLUSIVE_OR_EXPRESSION)


State 221

   53 EXCLUSIVE_OR_EXPRESSION: EXCLUSIVE_OR_EXPRESSION • XOR_OPERATOR AND_EXPRESSION
   55 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION BITWISE_OR_OPERATOR EXCLUSIVE_OR_EXPRESSION •

    XOR_OPERATOR  shift, and go to state 142

    $default  reduce using rule 55 (INCLUSIVE_OR_EXPRESSION)


State 222

   55 INCLUSIVE_OR_EXPRESSION: INCLUSIVE_OR_EXPRESSION • BITWISE_OR_OPERATOR EXCLUSIVE_OR_EXPRESSION
   57 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION LOGICAL_AND_OPERATOR INCLUSIVE_OR_EXPRESSION •

    BITWISE_OR_OPERATOR  shift, and go to state 143

    $default  reduce using rule 57 (LOGICAL_AND_EXPRESSION)


State 223

   57 LOGICAL_AND_EXPRESSION: LOGICAL_AND_EXPRESSION • LOGICAL_AND_OPERATOR INCLUSIVE_OR_EXPRESSION
   59 LOGICAL_OR_EXPRESSION: LOGICAL_OR_EXPRESSION LOGICAL_OR_OPERATOR LOGICAL_AND_EXPRESSION •

    LOGICAL_AND_OPERATOR  shift, and go to state 144

    $default  reduce using rule 59 (LOGICAL_OR_EXPRESSION)


State 224

   61 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION TERNARY_OPERATOR EXPRESSION • TERNARY_SEPERATOR CONDITIONAL_EXPRESSION
   67 EXPRESSION: EXPRESSION • COMMA ASSIGNMENT_EXPRESSION

    TERNARY_SEPERATOR  shift, and go to state 261
    COMMA              shift, and go to state 185


State 225

  172 JUMP_STATEMENT: BREAK SEMI_COLON •

    $default  reduce using rule 172 (JUMP_STATEMENT)


State 226

  173 JUMP_STATEMENT: RETURN EXPRESSION_OPT • SEMI_COLON

    SEMI_COLON  shift, and go to state 262


State 227

  155 LABELED_STATEMENT: CASE CONSTANT_EXPRESSION • TERNARY_SEPERATOR STATEMENT

    TERNARY_SEPERATOR  shift, and go to state 263


State 228

  168 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS • EXPRESSION_OPT SEMI_COLON EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT
  169                    | FOR LEFT_PARANTHESIS • DECLARATION EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT

    AUTO                     shift, and go to state 1
    RESTRICT                 shift, and go to state 2
    UNSIGNED                 shift, and go to state 3
    EXTERN                   shift, and go to state 4
    VOID                     shift, and go to state 5
    FLOAT                    shift, and go to state 6
    SHORT                    shift, and go to state 7
    VOLATILE                 shift, and go to state 8
    CHAR                     shift, and go to state 9
    SIGNED                   shift, and go to state 10
    CONST                    shift, and go to state 11
    SIZEOF                   shift, and go to state 61
    BOOL                     shift, and go to state 12
    STATIC                   shift, and go to state 13
    COMPLEX                  shift, and go to state 14
    INLINE                   shift, and go to state 15
    IMAGINARY                shift, and go to state 16
    INT                      shift, and go to state 17
    DOUBLE                   shift, and go to state 18
    LONG                     shift, and go to state 19
    REGISTER                 shift, and go to state 20
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    DECLARATION                go to state 264
    DECLARATION_SPECIFIERS     go to state 51
    STORAGE_CLASS_SPECIFIER    go to state 23
    TYPE_SPECIFIER             go to state 24
    TYPE_QUALIFIER             go to state 25
    FUNCTION_SPECIFIER         go to state 26
    EXPRESSION_OPT             go to state 265


State 229

  166 ITERATION_STATEMENT: WHILE LEFT_PARANTHESIS • EXPRESSION RIGHT_PARANTHESIS STATEMENT

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 266


State 230

  170 JUMP_STATEMENT: GOTO IDENTIFIER • SEMI_COLON

    SEMI_COLON  shift, and go to state 267


State 231

  171 JUMP_STATEMENT: CONTINUE SEMI_COLON •

    $default  reduce using rule 171 (JUMP_STATEMENT)


State 232

  163 SELECTION_STATEMENT: IF LEFT_PARANTHESIS • EXPRESSION RIGHT_PARANTHESIS STATEMENT
  164                    | IF LEFT_PARANTHESIS • EXPRESSION RIGHT_PARANTHESIS STATEMENT ELSE STATEMENT

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 268


State 233

  156 LABELED_STATEMENT: DEFAULT TERNARY_SEPERATOR • STATEMENT

    BREAK                    shift, and go to state 147
    RETURN                   shift, and go to state 148
    CASE                     shift, and go to state 149
    FOR                      shift, and go to state 150
    WHILE                    shift, and go to state 151
    GOTO                     shift, and go to state 152
    SIZEOF                   shift, and go to state 61
    CONTINUE                 shift, and go to state 153
    IF                       shift, and go to state 154
    DEFAULT                  shift, and go to state 155
    DO                       shift, and go to state 156
    SWITCH                   shift, and go to state 157
    IDENTIFIER               shift, and go to state 158
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 94
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    STATEMENT                  go to state 269
    LABELED_STATEMENT          go to state 162
    COMPOUND_STATEMENT         go to state 163
    EXPRESSION_STATEMENT       go to state 166
    SELECTION_STATEMENT        go to state 167
    ITERATION_STATEMENT        go to state 168
    JUMP_STATEMENT             go to state 169
    EXPRESSION_OPT             go to state 171


State 234

  167 ITERATION_STATEMENT: DO STATEMENT • WHILE LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS SEMI_COLON

    WHILE  shift, and go to state 270


State 235

  165 SELECTION_STATEMENT: SWITCH LEFT_PARANTHESIS • EXPRESSION RIGHT_PARANTHESIS STATEMENT

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 271


State 236

  154 LABELED_STATEMENT: IDENTIFIER TERNARY_SEPERATOR • STATEMENT

    BREAK                    shift, and go to state 147
    RETURN                   shift, and go to state 148
    CASE                     shift, and go to state 149
    FOR                      shift, and go to state 150
    WHILE                    shift, and go to state 151
    GOTO                     shift, and go to state 152
    SIZEOF                   shift, and go to state 61
    CONTINUE                 shift, and go to state 153
    IF                       shift, and go to state 154
    DEFAULT                  shift, and go to state 155
    DO                       shift, and go to state 156
    SWITCH                   shift, and go to state 157
    IDENTIFIER               shift, and go to state 158
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 94
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    STATEMENT                  go to state 272
    LABELED_STATEMENT          go to state 162
    COMPOUND_STATEMENT         go to state 163
    EXPRESSION_STATEMENT       go to state 166
    SELECTION_STATEMENT        go to state 167
    ITERATION_STATEMENT        go to state 168
    JUMP_STATEMENT             go to state 169
    EXPRESSION_OPT             go to state 171


State 237

  159 BLOCK_ITEM_LIST: BLOCK_ITEM_LIST BLOCK_ITEM •

    $default  reduce using rule 159 (BLOCK_ITEM_LIST)


State 238

  157 COMPOUND_STATEMENT: LEFT_CURLY_BRACKET BLOCK_ITEM_LIST_OPT RIGHT_CURLY_BRACKET •

    $default  reduce using rule 157 (COMPOUND_STATEMENT)


State 239

  162 EXPRESSION_STATEMENT: EXPRESSION_OPT SEMI_COLON •

    $default  reduce using rule 162 (EXPRESSION_STATEMENT)


State 240

  112 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET STATIC TYPE_QUALIFIER_LIST_OPT • ASSIGNMENT_EXPRESSION RIGHT_SQUARE_BRACKET

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 273


State 241

  113 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST STATIC • ASSIGNMENT_EXPRESSION RIGHT_SQUARE_BRACKET

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 274


State 242

   26 UNARY_OPEARATOR: MULTIPLICATION_OPERATOR •
  114 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST_OPT MULTIPLICATION_OPERATOR • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 275

    $default  reduce using rule 26 (UNARY_OPEARATOR)


State 243

  117 ASSIGNMENT_EXPRESSION_OPT: ASSIGNMENT_EXPRESSION •

    $default  reduce using rule 117 (ASSIGNMENT_EXPRESSION_OPT)


State 244

  111 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST_OPT ASSIGNMENT_EXPRESSION_OPT • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 276


State 245

  129 PARAMETER_DECLARATION: DECLARATION_SPECIFIERS DECLARATOR •

    $default  reduce using rule 129 (PARAMETER_DECLARATION)


State 246

  115 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_PARANTHESIS PARAMETER_TYPE_LIST RIGHT_PARANTHESIS •

    $default  reduce using rule 115 (DIRECT_DECLARATOR)


State 247

  126 PARAMETER_TYPE_LIST: PARAMETER_LIST COMMA • TRIPLE_DOT
  128 PARAMETER_LIST: PARAMETER_LIST COMMA • PARAMETER_DECLARATION

    AUTO        shift, and go to state 1
    RESTRICT    shift, and go to state 2
    UNSIGNED    shift, and go to state 3
    EXTERN      shift, and go to state 4
    VOID        shift, and go to state 5
    FLOAT       shift, and go to state 6
    SHORT       shift, and go to state 7
    VOLATILE    shift, and go to state 8
    CHAR        shift, and go to state 9
    SIGNED      shift, and go to state 10
    CONST       shift, and go to state 11
    BOOL        shift, and go to state 12
    STATIC      shift, and go to state 13
    COMPLEX     shift, and go to state 14
    INLINE      shift, and go to state 15
    IMAGINARY   shift, and go to state 16
    INT         shift, and go to state 17
    DOUBLE      shift, and go to state 18
    LONG        shift, and go to state 19
    REGISTER    shift, and go to state 20
    TRIPLE_DOT  shift, and go to state 277

    DECLARATION_SPECIFIERS   go to state 177
    STORAGE_CLASS_SPECIFIER  go to state 23
    TYPE_SPECIFIER           go to state 24
    TYPE_QUALIFIER           go to state 25
    FUNCTION_SPECIFIER       go to state 26
    PARAMETER_DECLARATION    go to state 278


State 248

  132 IDENTIFIER_LIST: IDENTIFIER_LIST COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 279


State 249

  116 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_PARANTHESIS IDENTIFIER_LIST_OPT RIGHT_PARANTHESIS •

    $default  reduce using rule 116 (DIRECT_DECLARATOR)


State 250

   12 POSTFIX_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS • LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET
   13                   | LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS • LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET
   23 UNARY_EXPRESSION: SIZEOF LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS •

    LEFT_CURLY_BRACKET  shift, and go to state 252

    $default  reduce using rule 23 (UNARY_EXPRESSION)


State 251

   67 EXPRESSION: EXPRESSION COMMA ASSIGNMENT_EXPRESSION •

    $default  reduce using rule 67 (EXPRESSION)


State 252

   12 POSTFIX_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET • INITIALIZER_LIST RIGHT_CURLY_BRACKET
   13                   | LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET • INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 107
    DOT                  shift, and go to state 108

    $default  reduce using rule 142 (DESIGNATION_OPT)

    INITIALIZER_LIST  go to state 280
    DESIGNATION_OPT   go to state 110
    DESIGNATION       go to state 111
    DESIGNATOR_LIST   go to state 112
    DESIGNATOR        go to state 113


State 253

   31 CAST_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS CAST_EXPRESSION •

    $default  reduce using rule 31 (CAST_EXPRESSION)


State 254

  146 DESIGNATOR: LEFT_SQUARE_BRACKET CONSTANT_EXPRESSION RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 146 (DESIGNATOR)


State 255

  138 INITIALIZER: LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET •

    $default  reduce using rule 138 (INITIALIZER)


State 256

  140 INITIALIZER_LIST: INITIALIZER_LIST COMMA DESIGNATION_OPT • INITIALIZER

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 66
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 91
    INITIALIZER                go to state 281


State 257

   12 POSTFIX_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS • LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET
   13                   | LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS • LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET

    LEFT_CURLY_BRACKET  shift, and go to state 252


State 258

    6 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION LEFT_SQUARE_BRACKET EXPRESSION RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 6 (POSTFIX_EXPRESSION)


State 259

   15 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST COMMA • ASSIGNMENT_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 282


State 260

    7 POSTFIX_EXPRESSION: POSTFIX_EXPRESSION LEFT_PARANTHESIS ARGUMENT_EXPRESSION_LIST_OPT RIGHT_PARANTHESIS •

    $default  reduce using rule 7 (POSTFIX_EXPRESSION)


State 261

   61 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION TERNARY_OPERATOR EXPRESSION TERNARY_SEPERATOR • CONDITIONAL_EXPRESSION

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 126
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 283


State 262

  173 JUMP_STATEMENT: RETURN EXPRESSION_OPT SEMI_COLON •

    $default  reduce using rule 173 (JUMP_STATEMENT)


State 263

  155 LABELED_STATEMENT: CASE CONSTANT_EXPRESSION TERNARY_SEPERATOR • STATEMENT

    BREAK                    shift, and go to state 147
    RETURN                   shift, and go to state 148
    CASE                     shift, and go to state 149
    FOR                      shift, and go to state 150
    WHILE                    shift, and go to state 151
    GOTO                     shift, and go to state 152
    SIZEOF                   shift, and go to state 61
    CONTINUE                 shift, and go to state 153
    IF                       shift, and go to state 154
    DEFAULT                  shift, and go to state 155
    DO                       shift, and go to state 156
    SWITCH                   shift, and go to state 157
    IDENTIFIER               shift, and go to state 158
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 94
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    STATEMENT                  go to state 284
    LABELED_STATEMENT          go to state 162
    COMPOUND_STATEMENT         go to state 163
    EXPRESSION_STATEMENT       go to state 166
    SELECTION_STATEMENT        go to state 167
    ITERATION_STATEMENT        go to state 168
    JUMP_STATEMENT             go to state 169
    EXPRESSION_OPT             go to state 171


State 264

  169 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS DECLARATION • EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    EXPRESSION_OPT             go to state 285


State 265

  168 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS EXPRESSION_OPT • SEMI_COLON EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT

    SEMI_COLON  shift, and go to state 286


State 266

   67 EXPRESSION: EXPRESSION • COMMA ASSIGNMENT_EXPRESSION
  166 ITERATION_STATEMENT: WHILE LEFT_PARANTHESIS EXPRESSION • RIGHT_PARANTHESIS STATEMENT

    RIGHT_PARANTHESIS  shift, and go to state 287
    COMMA              shift, and go to state 185


State 267

  170 JUMP_STATEMENT: GOTO IDENTIFIER SEMI_COLON •

    $default  reduce using rule 170 (JUMP_STATEMENT)


State 268

   67 EXPRESSION: EXPRESSION • COMMA ASSIGNMENT_EXPRESSION
  163 SELECTION_STATEMENT: IF LEFT_PARANTHESIS EXPRESSION • RIGHT_PARANTHESIS STATEMENT
  164                    | IF LEFT_PARANTHESIS EXPRESSION • RIGHT_PARANTHESIS STATEMENT ELSE STATEMENT

    RIGHT_PARANTHESIS  shift, and go to state 288
    COMMA              shift, and go to state 185


State 269

  156 LABELED_STATEMENT: DEFAULT TERNARY_SEPERATOR STATEMENT •

    $default  reduce using rule 156 (LABELED_STATEMENT)


State 270

  167 ITERATION_STATEMENT: DO STATEMENT WHILE • LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS SEMI_COLON

    LEFT_PARANTHESIS  shift, and go to state 289


State 271

   67 EXPRESSION: EXPRESSION • COMMA ASSIGNMENT_EXPRESSION
  165 SELECTION_STATEMENT: SWITCH LEFT_PARANTHESIS EXPRESSION • RIGHT_PARANTHESIS STATEMENT

    RIGHT_PARANTHESIS  shift, and go to state 290
    COMMA              shift, and go to state 185


State 272

  154 LABELED_STATEMENT: IDENTIFIER TERNARY_SEPERATOR STATEMENT •

    $default  reduce using rule 154 (LABELED_STATEMENT)


State 273

  112 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET STATIC TYPE_QUALIFIER_LIST_OPT ASSIGNMENT_EXPRESSION • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 291


State 274

  113 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST STATIC ASSIGNMENT_EXPRESSION • RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 292


State 275

  114 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST_OPT MULTIPLICATION_OPERATOR RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 114 (DIRECT_DECLARATOR)


State 276

  111 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST_OPT ASSIGNMENT_EXPRESSION_OPT RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 111 (DIRECT_DECLARATOR)


State 277

  126 PARAMETER_TYPE_LIST: PARAMETER_LIST COMMA TRIPLE_DOT •

    $default  reduce using rule 126 (PARAMETER_TYPE_LIST)


State 278

  128 PARAMETER_LIST: PARAMETER_LIST COMMA PARAMETER_DECLARATION •

    $default  reduce using rule 128 (PARAMETER_LIST)


State 279

  132 IDENTIFIER_LIST: IDENTIFIER_LIST COMMA IDENTIFIER •

    $default  reduce using rule 132 (IDENTIFIER_LIST)


State 280

   12 POSTFIX_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST • RIGHT_CURLY_BRACKET
   13                   | LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST • COMMA RIGHT_CURLY_BRACKET
  140 INITIALIZER_LIST: INITIALIZER_LIST • COMMA DESIGNATION_OPT INITIALIZER

    RIGHT_CURLY_BRACKET  shift, and go to state 293
    COMMA                shift, and go to state 294


State 281

  140 INITIALIZER_LIST: INITIALIZER_LIST COMMA DESIGNATION_OPT INITIALIZER •

    $default  reduce using rule 140 (INITIALIZER_LIST)


State 282

   15 ARGUMENT_EXPRESSION_LIST: ARGUMENT_EXPRESSION_LIST COMMA ASSIGNMENT_EXPRESSION •

    $default  reduce using rule 15 (ARGUMENT_EXPRESSION_LIST)


State 283

   61 CONDITIONAL_EXPRESSION: LOGICAL_OR_EXPRESSION TERNARY_OPERATOR EXPRESSION TERNARY_SEPERATOR CONDITIONAL_EXPRESSION •

    $default  reduce using rule 61 (CONDITIONAL_EXPRESSION)


State 284

  155 LABELED_STATEMENT: CASE CONSTANT_EXPRESSION TERNARY_SEPERATOR STATEMENT •

    $default  reduce using rule 155 (LABELED_STATEMENT)


State 285

  169 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS DECLARATION EXPRESSION_OPT • ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT

    ';'  shift, and go to state 295


State 286

  168 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS EXPRESSION_OPT SEMI_COLON • EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    EXPRESSION_OPT             go to state 296


State 287

  166 ITERATION_STATEMENT: WHILE LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS • STATEMENT

    BREAK                    shift, and go to state 147
    RETURN                   shift, and go to state 148
    CASE                     shift, and go to state 149
    FOR                      shift, and go to state 150
    WHILE                    shift, and go to state 151
    GOTO                     shift, and go to state 152
    SIZEOF                   shift, and go to state 61
    CONTINUE                 shift, and go to state 153
    IF                       shift, and go to state 154
    DEFAULT                  shift, and go to state 155
    DO                       shift, and go to state 156
    SWITCH                   shift, and go to state 157
    IDENTIFIER               shift, and go to state 158
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 94
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    STATEMENT                  go to state 297
    LABELED_STATEMENT          go to state 162
    COMPOUND_STATEMENT         go to state 163
    EXPRESSION_STATEMENT       go to state 166
    SELECTION_STATEMENT        go to state 167
    ITERATION_STATEMENT        go to state 168
    JUMP_STATEMENT             go to state 169
    EXPRESSION_OPT             go to state 171


State 288

  163 SELECTION_STATEMENT: IF LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS • STATEMENT
  164                    | IF LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS • STATEMENT ELSE STATEMENT

    BREAK                    shift, and go to state 147
    RETURN                   shift, and go to state 148
    CASE                     shift, and go to state 149
    FOR                      shift, and go to state 150
    WHILE                    shift, and go to state 151
    GOTO                     shift, and go to state 152
    SIZEOF                   shift, and go to state 61
    CONTINUE                 shift, and go to state 153
    IF                       shift, and go to state 154
    DEFAULT                  shift, and go to state 155
    DO                       shift, and go to state 156
    SWITCH                   shift, and go to state 157
    IDENTIFIER               shift, and go to state 158
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 94
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    STATEMENT                  go to state 298
    LABELED_STATEMENT          go to state 162
    COMPOUND_STATEMENT         go to state 163
    EXPRESSION_STATEMENT       go to state 166
    SELECTION_STATEMENT        go to state 167
    ITERATION_STATEMENT        go to state 168
    JUMP_STATEMENT             go to state 169
    EXPRESSION_OPT             go to state 171


State 289

  167 ITERATION_STATEMENT: DO STATEMENT WHILE LEFT_PARANTHESIS • EXPRESSION RIGHT_PARANTHESIS SEMI_COLON

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 299


State 290

  165 SELECTION_STATEMENT: SWITCH LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS • STATEMENT

    BREAK                    shift, and go to state 147
    RETURN                   shift, and go to state 148
    CASE                     shift, and go to state 149
    FOR                      shift, and go to state 150
    WHILE                    shift, and go to state 151
    GOTO                     shift, and go to state 152
    SIZEOF                   shift, and go to state 61
    CONTINUE                 shift, and go to state 153
    IF                       shift, and go to state 154
    DEFAULT                  shift, and go to state 155
    DO                       shift, and go to state 156
    SWITCH                   shift, and go to state 157
    IDENTIFIER               shift, and go to state 158
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 94
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    STATEMENT                  go to state 300
    LABELED_STATEMENT          go to state 162
    COMPOUND_STATEMENT         go to state 163
    EXPRESSION_STATEMENT       go to state 166
    SELECTION_STATEMENT        go to state 167
    ITERATION_STATEMENT        go to state 168
    JUMP_STATEMENT             go to state 169
    EXPRESSION_OPT             go to state 171


State 291

  112 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET STATIC TYPE_QUALIFIER_LIST_OPT ASSIGNMENT_EXPRESSION RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 112 (DIRECT_DECLARATOR)


State 292

  113 DIRECT_DECLARATOR: DIRECT_DECLARATOR LEFT_SQUARE_BRACKET TYPE_QUALIFIER_LIST STATIC ASSIGNMENT_EXPRESSION RIGHT_SQUARE_BRACKET •

    $default  reduce using rule 113 (DIRECT_DECLARATOR)


State 293

   12 POSTFIX_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST RIGHT_CURLY_BRACKET •

    $default  reduce using rule 12 (POSTFIX_EXPRESSION)


State 294

   13 POSTFIX_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA • RIGHT_CURLY_BRACKET
  140 INITIALIZER_LIST: INITIALIZER_LIST COMMA • DESIGNATION_OPT INITIALIZER

    LEFT_SQUARE_BRACKET  shift, and go to state 107
    RIGHT_CURLY_BRACKET  shift, and go to state 301
    DOT                  shift, and go to state 108

    $default  reduce using rule 142 (DESIGNATION_OPT)

    DESIGNATION_OPT  go to state 256
    DESIGNATION      go to state 111
    DESIGNATOR_LIST  go to state 112
    DESIGNATOR       go to state 113


State 295

  169 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS DECLARATION EXPRESSION_OPT ';' • EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    EXPRESSION_OPT             go to state 302


State 296

  168 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS EXPRESSION_OPT SEMI_COLON EXPRESSION_OPT • ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT

    ';'  shift, and go to state 303


State 297

  166 ITERATION_STATEMENT: WHILE LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT •

    $default  reduce using rule 166 (ITERATION_STATEMENT)


State 298

  163 SELECTION_STATEMENT: IF LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT •
  164                    | IF LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT • ELSE STATEMENT

    ELSE  shift, and go to state 304

    $default  reduce using rule 163 (SELECTION_STATEMENT)


State 299

   67 EXPRESSION: EXPRESSION • COMMA ASSIGNMENT_EXPRESSION
  167 ITERATION_STATEMENT: DO STATEMENT WHILE LEFT_PARANTHESIS EXPRESSION • RIGHT_PARANTHESIS SEMI_COLON

    RIGHT_PARANTHESIS  shift, and go to state 305
    COMMA              shift, and go to state 185


State 300

  165 SELECTION_STATEMENT: SWITCH LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT •

    $default  reduce using rule 165 (SELECTION_STATEMENT)


State 301

   13 POSTFIX_EXPRESSION: LEFT_PARANTHESIS TYPE_NAME RIGHT_PARANTHESIS LEFT_CURLY_BRACKET INITIALIZER_LIST COMMA RIGHT_CURLY_BRACKET •

    $default  reduce using rule 13 (POSTFIX_EXPRESSION)


State 302

  169 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS DECLARATION EXPRESSION_OPT ';' EXPRESSION_OPT • RIGHT_PARANTHESIS STATEMENT

    RIGHT_PARANTHESIS  shift, and go to state 306


State 303

  168 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS EXPRESSION_OPT SEMI_COLON EXPRESSION_OPT ';' • EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT

    SIZEOF                   shift, and go to state 61
    IDENTIFIER               shift, and go to state 62
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    EXPRESSION_OPT             go to state 307


State 304

  164 SELECTION_STATEMENT: IF LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT ELSE • STATEMENT

    BREAK                    shift, and go to state 147
    RETURN                   shift, and go to state 148
    CASE                     shift, and go to state 149
    FOR                      shift, and go to state 150
    WHILE                    shift, and go to state 151
    GOTO                     shift, and go to state 152
    SIZEOF                   shift, and go to state 61
    CONTINUE                 shift, and go to state 153
    IF                       shift, and go to state 154
    DEFAULT                  shift, and go to state 155
    DO                       shift, and go to state 156
    SWITCH                   shift, and go to state 157
    IDENTIFIER               shift, and go to state 158
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 94
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    STATEMENT                  go to state 308
    LABELED_STATEMENT          go to state 162
    COMPOUND_STATEMENT         go to state 163
    EXPRESSION_STATEMENT       go to state 166
    SELECTION_STATEMENT        go to state 167
    ITERATION_STATEMENT        go to state 168
    JUMP_STATEMENT             go to state 169
    EXPRESSION_OPT             go to state 171


State 305

  167 ITERATION_STATEMENT: DO STATEMENT WHILE LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS • SEMI_COLON

    SEMI_COLON  shift, and go to state 309


State 306

  169 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS DECLARATION EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS • STATEMENT

    BREAK                    shift, and go to state 147
    RETURN                   shift, and go to state 148
    CASE                     shift, and go to state 149
    FOR                      shift, and go to state 150
    WHILE                    shift, and go to state 151
    GOTO                     shift, and go to state 152
    SIZEOF                   shift, and go to state 61
    CONTINUE                 shift, and go to state 153
    IF                       shift, and go to state 154
    DEFAULT                  shift, and go to state 155
    DO                       shift, and go to state 156
    SWITCH                   shift, and go to state 157
    IDENTIFIER               shift, and go to state 158
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 94
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    STATEMENT                  go to state 310
    LABELED_STATEMENT          go to state 162
    COMPOUND_STATEMENT         go to state 163
    EXPRESSION_STATEMENT       go to state 166
    SELECTION_STATEMENT        go to state 167
    ITERATION_STATEMENT        go to state 168
    JUMP_STATEMENT             go to state 169
    EXPRESSION_OPT             go to state 171


State 307

  168 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS EXPRESSION_OPT SEMI_COLON EXPRESSION_OPT ';' EXPRESSION_OPT • RIGHT_PARANTHESIS STATEMENT

    RIGHT_PARANTHESIS  shift, and go to state 311


State 308

  164 SELECTION_STATEMENT: IF LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS STATEMENT ELSE STATEMENT •

    $default  reduce using rule 164 (SELECTION_STATEMENT)


State 309

  167 ITERATION_STATEMENT: DO STATEMENT WHILE LEFT_PARANTHESIS EXPRESSION RIGHT_PARANTHESIS SEMI_COLON •

    $default  reduce using rule 167 (ITERATION_STATEMENT)


State 310

  169 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS DECLARATION EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT •

    $default  reduce using rule 169 (ITERATION_STATEMENT)


State 311

  168 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS EXPRESSION_OPT SEMI_COLON EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS • STATEMENT

    BREAK                    shift, and go to state 147
    RETURN                   shift, and go to state 148
    CASE                     shift, and go to state 149
    FOR                      shift, and go to state 150
    WHILE                    shift, and go to state 151
    GOTO                     shift, and go to state 152
    SIZEOF                   shift, and go to state 61
    CONTINUE                 shift, and go to state 153
    IF                       shift, and go to state 154
    DEFAULT                  shift, and go to state 155
    DO                       shift, and go to state 156
    SWITCH                   shift, and go to state 157
    IDENTIFIER               shift, and go to state 158
    STRING_LITERAL           shift, and go to state 63
    CONSTANT                 shift, and go to state 64
    LEFT_PARANTHESIS         shift, and go to state 65
    LEFT_CURLY_BRACKET       shift, and go to state 94
    INCREMENT_OPERATOR       shift, and go to state 67
    DECREMENT_OPERATOR       shift, and go to state 68
    BITWISE_AND_OPERATOR     shift, and go to state 69
    ADDITION_OPERATOR        shift, and go to state 70
    MULTIPLICATION_OPERATOR  shift, and go to state 71
    SUBTRACTION_OPERATOR     shift, and go to state 72
    NOT_OPERATOR             shift, and go to state 73
    NEGATION_OPERATOR        shift, and go to state 74

    $default  reduce using rule 177 (EXPRESSION_OPT)

    PRIMARY_EXPRESSION         go to state 75
    POSTFIX_EXPRESSION         go to state 76
    UNARY_EXPRESSION           go to state 77
    UNARY_OPEARATOR            go to state 78
    CAST_EXPRESSION            go to state 79
    MULTIPLICATIVE_EXPRESSION  go to state 80
    ADDITIVE_EXPRESSION        go to state 81
    SHIFT_EXPRESSION           go to state 82
    RELATIONAL_EXPRESSION      go to state 83
    EQUALITY_EXPRESSION        go to state 84
    AND_EXPRESSION             go to state 85
    EXCLUSIVE_OR_EXPRESSION    go to state 86
    INCLUSIVE_OR_EXPRESSION    go to state 87
    LOGICAL_AND_EXPRESSION     go to state 88
    LOGICAL_OR_EXPRESSION      go to state 89
    CONDITIONAL_EXPRESSION     go to state 90
    ASSIGNMENT_EXPRESSION      go to state 101
    EXPRESSION                 go to state 159
    STATEMENT                  go to state 312
    LABELED_STATEMENT          go to state 162
    COMPOUND_STATEMENT         go to state 163
    EXPRESSION_STATEMENT       go to state 166
    SELECTION_STATEMENT        go to state 167
    ITERATION_STATEMENT        go to state 168
    JUMP_STATEMENT             go to state 169
    EXPRESSION_OPT             go to state 171


State 312

  168 ITERATION_STATEMENT: FOR LEFT_PARANTHESIS EXPRESSION_OPT SEMI_COLON EXPRESSION_OPT ';' EXPRESSION_OPT RIGHT_PARANTHESIS STATEMENT •

    $default  reduce using rule 168 (ITERATION_STATEMENT)
